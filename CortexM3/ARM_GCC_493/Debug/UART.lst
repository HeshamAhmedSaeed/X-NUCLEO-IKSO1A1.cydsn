ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"UART.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.UART_Enable,"ax",%progbits
  19              		.align	2
  20              		.global	UART_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	UART_Enable, %function
  24              	UART_Enable:
  25              	.LFB2:
  26              		.file 1 "Generated_Source\\PSoC5\\UART.c"
   1:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART.c **** * File Name: UART.c
   3:Generated_Source\PSoC5/UART.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART.c **** *
   5:Generated_Source\PSoC5/UART.c **** * Description:
   6:Generated_Source\PSoC5/UART.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART.c **** *
   8:Generated_Source\PSoC5/UART.c **** * Note:
   9:Generated_Source\PSoC5/UART.c **** *
  10:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/UART.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART.c **** 
  17:Generated_Source\PSoC5/UART.c **** #include "UART.h"
  18:Generated_Source\PSoC5/UART.c **** #if (UART_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART.c ****     #include "UART_IntClock.h"
  20:Generated_Source\PSoC5/UART.c **** #endif /* End UART_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART.c **** 
  22:Generated_Source\PSoC5/UART.c **** 
  23:Generated_Source\PSoC5/UART.c **** /***************************************
  24:Generated_Source\PSoC5/UART.c **** * Global data allocation
  25:Generated_Source\PSoC5/UART.c **** ***************************************/
  26:Generated_Source\PSoC5/UART.c **** 
  27:Generated_Source\PSoC5/UART.c **** uint8 UART_initVar = 0u;
  28:Generated_Source\PSoC5/UART.c **** 
  29:Generated_Source\PSoC5/UART.c **** #if (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED)
  30:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBuffer[UART_TX_BUFFER_SIZE];
  31:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBufferRead = 0u;
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 2


  32:Generated_Source\PSoC5/UART.c ****     uint8 UART_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART.c **** #endif /* (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART.c **** 
  35:Generated_Source\PSoC5/UART.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  36:Generated_Source\PSoC5/UART.c ****     uint8 UART_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBuffer[UART_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART.c ****     #if (UART_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressMode = UART_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/UART.c **** #endif /* (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED)) */
  47:Generated_Source\PSoC5/UART.c **** 
  48:Generated_Source\PSoC5/UART.c **** 
  49:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Start
  51:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART.c **** *
  53:Generated_Source\PSoC5/UART.c **** * Summary:
  54:Generated_Source\PSoC5/UART.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART.c **** *  UART_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/UART.c **** *  UART_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART.c **** *  UART_Enable() function.
  58:Generated_Source\PSoC5/UART.c **** *
  59:Generated_Source\PSoC5/UART.c **** * Parameters:
  60:Generated_Source\PSoC5/UART.c **** *  None.
  61:Generated_Source\PSoC5/UART.c **** *
  62:Generated_Source\PSoC5/UART.c **** * Return:
  63:Generated_Source\PSoC5/UART.c **** *  None.
  64:Generated_Source\PSoC5/UART.c **** *
  65:Generated_Source\PSoC5/UART.c **** * Global variables:
  66:Generated_Source\PSoC5/UART.c **** *  The UART_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART.c **** *  and set to one (1u) the first time UART_Start() is called. This
  69:Generated_Source\PSoC5/UART.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART.c **** *  subsequent calls to the UART_Start() routine.
  71:Generated_Source\PSoC5/UART.c **** *
  72:Generated_Source\PSoC5/UART.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART.c **** *  No.
  74:Generated_Source\PSoC5/UART.c **** *
  75:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART.c **** void UART_Start(void) 
  77:Generated_Source\PSoC5/UART.c **** {
  78:Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART.c ****     if(UART_initVar == 0u)
  80:Generated_Source\PSoC5/UART.c ****     {
  81:Generated_Source\PSoC5/UART.c ****         UART_Init();
  82:Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
  83:Generated_Source\PSoC5/UART.c ****     }
  84:Generated_Source\PSoC5/UART.c **** 
  85:Generated_Source\PSoC5/UART.c ****     UART_Enable();
  86:Generated_Source\PSoC5/UART.c **** }
  87:Generated_Source\PSoC5/UART.c **** 
  88:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 3


  89:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Init
  91:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART.c **** *
  93:Generated_Source\PSoC5/UART.c **** * Summary:
  94:Generated_Source\PSoC5/UART.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART.c **** *  dialog settings. It is not necessary to call UART_Init() because
  96:Generated_Source\PSoC5/UART.c **** *  the UART_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/UART.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART.c **** *
  99:Generated_Source\PSoC5/UART.c **** * Parameters:
 100:Generated_Source\PSoC5/UART.c **** *  None.
 101:Generated_Source\PSoC5/UART.c **** *
 102:Generated_Source\PSoC5/UART.c **** * Return:
 103:Generated_Source\PSoC5/UART.c **** *  None.
 104:Generated_Source\PSoC5/UART.c **** *
 105:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART.c **** void UART_Init(void) 
 107:Generated_Source\PSoC5/UART.c **** {
 108:Generated_Source\PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 109:Generated_Source\PSoC5/UART.c **** 
 110:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_RX_VECT_NUM, &UART_RXISR);
 113:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_RX_VECT_NUM, UART_RX_PRIOR_NUM);
 114:Generated_Source\PSoC5/UART.c ****             UART_errorStatus = 0u;
 115:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART.c **** 
 117:Generated_Source\PSoC5/UART.c ****         #if (UART_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddressMode(UART_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress1(UART_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress2(UART_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART.c **** 
 123:Generated_Source\PSoC5/UART.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_PERIOD_REG = UART_RXBITCTR_INIT;
 125:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = UART_INIT_RX_INTERRUPTS_MASK;
 127:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART.c **** 
 129:Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 130:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/UART.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_TX_VECT_NUM, &UART_TXISR);
 133:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_TX_VECT_NUM, UART_TX_PRIOR_NUM);
 134:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART.c **** 
 136:Generated_Source\PSoC5/UART.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART.c ****         #if (UART_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKGEN_CTR_REG = UART_BIT_CENTER;
 139:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
 140:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART.c ****         #else
 142:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_PERIOD_REG = ((UART_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 4


 146:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC5/UART.c ****         #else
 150:Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_INIT_TX_INTERRUPTS_MASK;
 151:Generated_Source\PSoC5/UART.c ****         #endif /*End UART_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART.c **** 
 153:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_TX_ENABLED */
 154:Generated_Source\PSoC5/UART.c **** 
 155:Generated_Source\PSoC5/UART.c ****     #if(UART_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART.c ****         UART_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART.c ****             (UART_ReadControlRegister() & (uint8)~UART_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART.c ****             (uint8)(UART_PARITY_TYPE << UART_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/UART.c **** }
 161:Generated_Source\PSoC5/UART.c **** 
 162:Generated_Source\PSoC5/UART.c **** 
 163:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Enable
 165:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART.c **** *
 167:Generated_Source\PSoC5/UART.c **** * Summary:
 168:Generated_Source\PSoC5/UART.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/UART.c **** *  to call UART_Enable() because the UART_Start() API
 170:Generated_Source\PSoC5/UART.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART.c **** *  operation.
 172:Generated_Source\PSoC5/UART.c **** 
 173:Generated_Source\PSoC5/UART.c **** * Parameters:
 174:Generated_Source\PSoC5/UART.c **** *  None.
 175:Generated_Source\PSoC5/UART.c **** *
 176:Generated_Source\PSoC5/UART.c **** * Return:
 177:Generated_Source\PSoC5/UART.c **** *  None.
 178:Generated_Source\PSoC5/UART.c **** *
 179:Generated_Source\PSoC5/UART.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART.c **** *  UART_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART.c **** *
 182:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART.c **** void UART_Enable(void) 
 184:Generated_Source\PSoC5/UART.c **** {
  27              		.loc 1 184 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
 185:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
  35              		.loc 1 186 0
  36 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  37              	.LVL0:
  38 0006 0446     		mov	r4, r0
  39              	.LVL1:
 187:Generated_Source\PSoC5/UART.c **** 
 188:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 189:Generated_Source\PSoC5/UART.c ****         /* RX Counter (Count7) Enable */
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 5


 190:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
  40              		.loc 1 190 0
  41 0008 0B4A     		ldr	r2, .L3
  42 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  43 000c 43F02003 		orr	r3, r3, #32
  44 0010 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/UART.c **** 
 192:Generated_Source\PSoC5/UART.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  |= UART_INT_ENABLE;
  45              		.loc 1 193 0
  46 0012 A2F20112 		subw	r2, r2, #257
  47 0016 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  48 0018 43F01003 		orr	r3, r3, #16
  49 001c 1370     		strb	r3, [r2]
 194:Generated_Source\PSoC5/UART.c **** 
 195:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART.c ****             UART_EnableRxInt();
 197:Generated_Source\PSoC5/UART.c **** 
 198:Generated_Source\PSoC5/UART.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART.c ****                 UART_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 203:Generated_Source\PSoC5/UART.c **** 
 204:Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 205:Generated_Source\PSoC5/UART.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART.c **** 
 210:Generated_Source\PSoC5/UART.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG |= UART_INT_ENABLE;
  50              		.loc 1 211 0
  51 001e 02F20312 		addw	r2, r2, #259
  52 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  53 0024 43F01003 		orr	r3, r3, #16
  54 0028 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/UART.c ****             UART_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 215:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART.c ****      #endif /* (UART_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART.c **** 
 218:Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART.c ****         UART_IntClock_Start();  /* Enable the clock */
  55              		.loc 1 219 0
  56 002a FFF7FEFF 		bl	UART_IntClock_Start
  57              	.LVL2:
 220:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/UART.c **** 
 222:Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
  58              		.loc 1 222 0
  59 002e 2046     		mov	r0, r4
  60 0030 FFF7FEFF 		bl	CyExitCriticalSection
  61              	.LVL3:
  62 0034 10BD     		pop	{r4, pc}
  63              	.LVL4:
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 6


  64              	.L4:
  65 0036 00BF     		.align	2
  66              	.L3:
  67 0038 99650040 		.word	1073767833
  68              		.cfi_endproc
  69              	.LFE2:
  70              		.size	UART_Enable, .-UART_Enable
  71              		.section	.text.UART_Stop,"ax",%progbits
  72              		.align	2
  73              		.global	UART_Stop
  74              		.thumb
  75              		.thumb_func
  76              		.type	UART_Stop, %function
  77              	UART_Stop:
  78              	.LFB3:
 223:Generated_Source\PSoC5/UART.c **** }
 224:Generated_Source\PSoC5/UART.c **** 
 225:Generated_Source\PSoC5/UART.c **** 
 226:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Stop
 228:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 229:Generated_Source\PSoC5/UART.c **** *
 230:Generated_Source\PSoC5/UART.c **** * Summary:
 231:Generated_Source\PSoC5/UART.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART.c **** *
 233:Generated_Source\PSoC5/UART.c **** * Parameters:
 234:Generated_Source\PSoC5/UART.c **** *  None.
 235:Generated_Source\PSoC5/UART.c **** *
 236:Generated_Source\PSoC5/UART.c **** * Return:
 237:Generated_Source\PSoC5/UART.c **** *  None.
 238:Generated_Source\PSoC5/UART.c **** *
 239:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART.c **** void UART_Stop(void) 
 241:Generated_Source\PSoC5/UART.c **** {
  79              		.loc 1 241 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83 0000 10B5     		push	{r4, lr}
  84              		.cfi_def_cfa_offset 8
  85              		.cfi_offset 4, -8
  86              		.cfi_offset 14, -4
 242:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
  87              		.loc 1 243 0
  88 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  89              	.LVL5:
  90 0006 0446     		mov	r4, r0
  91              	.LVL6:
 244:Generated_Source\PSoC5/UART.c **** 
 245:Generated_Source\PSoC5/UART.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 247:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
  92              		.loc 1 247 0
  93 0008 0A4A     		ldr	r2, .L7
  94 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  95 000c 03F0DF03 		and	r3, r3, #223
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 7


  96 0010 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 249:Generated_Source\PSoC5/UART.c **** 
 250:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 251:Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 253:Generated_Source\PSoC5/UART.c ****         #endif /* (!UART_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART.c **** 
 256:Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART.c ****         UART_IntClock_Stop();   /* Disable the clock */
  97              		.loc 1 257 0
  98 0012 FFF7FEFF 		bl	UART_IntClock_Stop
  99              	.LVL7:
 258:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/UART.c **** 
 260:Generated_Source\PSoC5/UART.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 262:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  &= (uint8) ~UART_INT_ENABLE;
 100              		.loc 1 262 0
 101 0016 084A     		ldr	r2, .L7+4
 102 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 103 001a 03F0EF03 		and	r3, r3, #239
 104 001e 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC5/UART.c **** 
 264:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART.c ****             UART_DisableRxInt();
 266:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART.c **** 
 269:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 270:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG &= (uint8) ~UART_INT_ENABLE;
 105              		.loc 1 270 0
 106 0020 02F20312 		addw	r2, r2, #259
 107 0024 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 108 0026 03F0EF03 		and	r3, r3, #239
 109 002a 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC5/UART.c **** 
 272:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 274:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 276:Generated_Source\PSoC5/UART.c **** 
 277:Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 110              		.loc 1 277 0
 111 002c 2046     		mov	r0, r4
 112 002e FFF7FEFF 		bl	CyExitCriticalSection
 113              	.LVL8:
 114 0032 10BD     		pop	{r4, pc}
 115              	.LVL9:
 116              	.L8:
 117              		.align	2
 118              	.L7:
 119 0034 99650040 		.word	1073767833
 120 0038 98640040 		.word	1073767576
 121              		.cfi_endproc
 122              	.LFE3:
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 8


 123              		.size	UART_Stop, .-UART_Stop
 124              		.section	.text.UART_ReadControlRegister,"ax",%progbits
 125              		.align	2
 126              		.global	UART_ReadControlRegister
 127              		.thumb
 128              		.thumb_func
 129              		.type	UART_ReadControlRegister, %function
 130              	UART_ReadControlRegister:
 131              	.LFB4:
 278:Generated_Source\PSoC5/UART.c **** }
 279:Generated_Source\PSoC5/UART.c **** 
 280:Generated_Source\PSoC5/UART.c **** 
 281:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/UART.c **** * Function Name: UART_ReadControlRegister
 283:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART.c **** *
 285:Generated_Source\PSoC5/UART.c **** * Summary:
 286:Generated_Source\PSoC5/UART.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART.c **** *
 288:Generated_Source\PSoC5/UART.c **** * Parameters:
 289:Generated_Source\PSoC5/UART.c **** *  None.
 290:Generated_Source\PSoC5/UART.c **** *
 291:Generated_Source\PSoC5/UART.c **** * Return:
 292:Generated_Source\PSoC5/UART.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART.c **** *
 294:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART.c **** uint8 UART_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/UART.c **** {
 132              		.loc 1 296 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 297:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART.c ****         return(0u);
 299:Generated_Source\PSoC5/UART.c ****     #else
 300:Generated_Source\PSoC5/UART.c ****         return(UART_CONTROL_REG);
 137              		.loc 1 300 0
 138 0000 014B     		ldr	r3, .L10
 139 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 301:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART.c **** }
 140              		.loc 1 302 0
 141 0004 7047     		bx	lr
 142              	.L11:
 143 0006 00BF     		.align	2
 144              	.L10:
 145 0008 7B640040 		.word	1073767547
 146              		.cfi_endproc
 147              	.LFE4:
 148              		.size	UART_ReadControlRegister, .-UART_ReadControlRegister
 149              		.section	.text.UART_WriteControlRegister,"ax",%progbits
 150              		.align	2
 151              		.global	UART_WriteControlRegister
 152              		.thumb
 153              		.thumb_func
 154              		.type	UART_WriteControlRegister, %function
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 9


 155              	UART_WriteControlRegister:
 156              	.LFB5:
 303:Generated_Source\PSoC5/UART.c **** 
 304:Generated_Source\PSoC5/UART.c **** 
 305:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART.c **** * Function Name: UART_WriteControlRegister
 307:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 308:Generated_Source\PSoC5/UART.c **** *
 309:Generated_Source\PSoC5/UART.c **** * Summary:
 310:Generated_Source\PSoC5/UART.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART.c **** *
 312:Generated_Source\PSoC5/UART.c **** * Parameters:
 313:Generated_Source\PSoC5/UART.c **** *  control:  control register value
 314:Generated_Source\PSoC5/UART.c **** *
 315:Generated_Source\PSoC5/UART.c **** * Return:
 316:Generated_Source\PSoC5/UART.c **** *  None.
 317:Generated_Source\PSoC5/UART.c **** *
 318:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART.c **** void  UART_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/UART.c **** {
 157              		.loc 1 320 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 162              	.LVL10:
 321:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/UART.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART.c ****         {
 324:Generated_Source\PSoC5/UART.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART.c ****         }
 326:Generated_Source\PSoC5/UART.c ****     #else
 327:Generated_Source\PSoC5/UART.c ****        UART_CONTROL_REG = control;
 163              		.loc 1 327 0
 164 0000 014B     		ldr	r3, .L13
 165 0002 1870     		strb	r0, [r3]
 166 0004 7047     		bx	lr
 167              	.L14:
 168 0006 00BF     		.align	2
 169              	.L13:
 170 0008 7B640040 		.word	1073767547
 171              		.cfi_endproc
 172              	.LFE5:
 173              		.size	UART_WriteControlRegister, .-UART_WriteControlRegister
 174              		.section	.text.UART_SetRxInterruptMode,"ax",%progbits
 175              		.align	2
 176              		.global	UART_SetRxInterruptMode
 177              		.thumb
 178              		.thumb_func
 179              		.type	UART_SetRxInterruptMode, %function
 180              	UART_SetRxInterruptMode:
 181              	.LFB6:
 328:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART.c **** }
 330:Generated_Source\PSoC5/UART.c **** 
 331:Generated_Source\PSoC5/UART.c **** 
 332:Generated_Source\PSoC5/UART.c **** #if(UART_RX_ENABLED || UART_HD_ENABLED)
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 10


 333:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxInterruptMode
 335:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART.c ****     *
 337:Generated_Source\PSoC5/UART.c ****     * Summary:
 338:Generated_Source\PSoC5/UART.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART.c ****     *
 340:Generated_Source\PSoC5/UART.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/UART.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/UART.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/UART.c ****     *
 352:Generated_Source\PSoC5/UART.c ****     * Return:
 353:Generated_Source\PSoC5/UART.c ****     *  None.
 354:Generated_Source\PSoC5/UART.c ****     *
 355:Generated_Source\PSoC5/UART.c ****     * Theory:
 356:Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/UART.c ****     *
 358:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/UART.c ****     void UART_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART.c ****     {
 182              		.loc 1 360 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
 187              	.LVL11:
 361:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = intSrc;
 188              		.loc 1 361 0
 189 0000 014B     		ldr	r3, .L16
 190 0002 1870     		strb	r0, [r3]
 191 0004 7047     		bx	lr
 192              	.L17:
 193 0006 00BF     		.align	2
 194              	.L16:
 195 0008 88640040 		.word	1073767560
 196              		.cfi_endproc
 197              	.LFE6:
 198              		.size	UART_SetRxInterruptMode, .-UART_SetRxInterruptMode
 199              		.section	.text.UART_ReadRxData,"ax",%progbits
 200              		.align	2
 201              		.global	UART_ReadRxData
 202              		.thumb
 203              		.thumb_func
 204              		.type	UART_ReadRxData, %function
 205              	UART_ReadRxData:
 206              	.LFB7:
 362:Generated_Source\PSoC5/UART.c ****     }
 363:Generated_Source\PSoC5/UART.c **** 
 364:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 11


 365:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxData
 367:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART.c ****     *
 369:Generated_Source\PSoC5/UART.c ****     * Summary:
 370:Generated_Source\PSoC5/UART.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/UART.c ****     *
 373:Generated_Source\PSoC5/UART.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART.c ****     *  None.
 375:Generated_Source\PSoC5/UART.c ****     *
 376:Generated_Source\PSoC5/UART.c ****     * Return:
 377:Generated_Source\PSoC5/UART.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART.c ****     *
 379:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/UART.c ****     *
 388:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART.c ****     *  No.
 390:Generated_Source\PSoC5/UART.c ****     *
 391:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART.c ****     {
 207              		.loc 1 393 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              		@ link register save eliminated.
 394:Generated_Source\PSoC5/UART.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART.c **** 
 396:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART.c **** 
 398:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/UART.c **** 
 401:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 403:Generated_Source\PSoC5/UART.c **** 
 404:Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 405:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 406:Generated_Source\PSoC5/UART.c **** 
 407:Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC5/UART.c ****         {
 409:Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 410:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC5/UART.c **** 
 412:Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC5/UART.c ****             {
 414:Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC5/UART.c ****             }
 416:Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 12


 417:Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 418:Generated_Source\PSoC5/UART.c **** 
 419:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC5/UART.c ****             {
 421:Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC5/UART.c ****                 #if ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 425:Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/UART.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART.c ****                             */
 430:Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/UART.c ****                         }
 432:Generated_Source\PSoC5/UART.c ****                     #else
 433:Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 435:Generated_Source\PSoC5/UART.c ****                 #endif /* ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/UART.c ****             }
 437:Generated_Source\PSoC5/UART.c ****         }
 438:Generated_Source\PSoC5/UART.c ****         else
 439:Generated_Source\PSoC5/UART.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 441:Generated_Source\PSoC5/UART.c ****         }
 442:Generated_Source\PSoC5/UART.c **** 
 443:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 444:Generated_Source\PSoC5/UART.c **** 
 445:Generated_Source\PSoC5/UART.c ****     #else
 446:Generated_Source\PSoC5/UART.c **** 
 447:Generated_Source\PSoC5/UART.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART.c ****         rxData = UART_RXDATA_REG;
 212              		.loc 1 448 0
 213 0000 014B     		ldr	r3, .L19
 214 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 215              	.LVL12:
 449:Generated_Source\PSoC5/UART.c **** 
 450:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART.c **** 
 452:Generated_Source\PSoC5/UART.c ****         return(rxData);
 453:Generated_Source\PSoC5/UART.c ****     }
 216              		.loc 1 453 0
 217 0004 7047     		bx	lr
 218              	.L20:
 219 0006 00BF     		.align	2
 220              	.L19:
 221 0008 4A640040 		.word	1073767498
 222              		.cfi_endproc
 223              	.LFE7:
 224              		.size	UART_ReadRxData, .-UART_ReadRxData
 225              		.section	.text.UART_ReadRxStatus,"ax",%progbits
 226              		.align	2
 227              		.global	UART_ReadRxStatus
 228              		.thumb
 229              		.thumb_func
 230              		.type	UART_ReadRxStatus, %function
 231              	UART_ReadRxStatus:
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 13


 232              	.LFB8:
 454:Generated_Source\PSoC5/UART.c **** 
 455:Generated_Source\PSoC5/UART.c **** 
 456:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxStatus
 458:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART.c ****     *
 460:Generated_Source\PSoC5/UART.c ****     * Summary:
 461:Generated_Source\PSoC5/UART.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/UART.c ****     *
 464:Generated_Source\PSoC5/UART.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART.c ****     *  None.
 466:Generated_Source\PSoC5/UART.c ****     *
 467:Generated_Source\PSoC5/UART.c ****     * Return:
 468:Generated_Source\PSoC5/UART.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART.c ****     *
 470:Generated_Source\PSoC5/UART.c ****     * Side Effect:
 471:Generated_Source\PSoC5/UART.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART.c ****     *  register read.
 475:Generated_Source\PSoC5/UART.c ****     *
 476:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART.c ****     *   UART_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART.c ****     *   UART_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/UART.c ****     *   bits.
 483:Generated_Source\PSoC5/UART.c ****     *
 484:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/UART.c ****     {
 233              		.loc 1 486 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              		@ link register save eliminated.
 487:Generated_Source\PSoC5/UART.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART.c **** 
 489:Generated_Source\PSoC5/UART.c ****         status = UART_RXSTATUS_REG & UART_RX_HW_MASK;
 238              		.loc 1 489 0
 239 0000 024B     		ldr	r3, .L22
 240 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 241              	.LVL13:
 490:Generated_Source\PSoC5/UART.c **** 
 491:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC5/UART.c ****         {
 494:Generated_Source\PSoC5/UART.c ****             status |= UART_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC5/UART.c ****             UART_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC5/UART.c ****         }
 497:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/UART.c **** 
 499:Generated_Source\PSoC5/UART.c ****         return(status);
 500:Generated_Source\PSoC5/UART.c ****     }
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 14


 242              		.loc 1 500 0
 243 0004 00F07F00 		and	r0, r0, #127
 244              	.LVL14:
 245 0008 7047     		bx	lr
 246              	.L23:
 247 000a 00BF     		.align	2
 248              	.L22:
 249 000c 68640040 		.word	1073767528
 250              		.cfi_endproc
 251              	.LFE8:
 252              		.size	UART_ReadRxStatus, .-UART_ReadRxStatus
 253              		.section	.text.UART_GetChar,"ax",%progbits
 254              		.align	2
 255              		.global	UART_GetChar
 256              		.thumb
 257              		.thumb_func
 258              		.type	UART_GetChar, %function
 259              	UART_GetChar:
 260              	.LFB9:
 501:Generated_Source\PSoC5/UART.c **** 
 502:Generated_Source\PSoC5/UART.c **** 
 503:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetChar
 505:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/UART.c ****     *
 507:Generated_Source\PSoC5/UART.c ****     * Summary:
 508:Generated_Source\PSoC5/UART.c ****     *  Returns the last received byte of data. UART_GetChar() is
 509:Generated_Source\PSoC5/UART.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/UART.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/UART.c ****     *
 512:Generated_Source\PSoC5/UART.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART.c ****     *  None.
 514:Generated_Source\PSoC5/UART.c ****     *
 515:Generated_Source\PSoC5/UART.c ****     * Return:
 516:Generated_Source\PSoC5/UART.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/UART.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART.c ****     *
 519:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART.c ****     *
 528:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 529:Generated_Source\PSoC5/UART.c ****     *  No.
 530:Generated_Source\PSoC5/UART.c ****     *
 531:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetChar(void) 
 533:Generated_Source\PSoC5/UART.c ****     {
 261              		.loc 1 533 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		@ link register save eliminated.
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 15


 266              	.LVL15:
 534:Generated_Source\PSoC5/UART.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC5/UART.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART.c **** 
 537:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART.c **** 
 541:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 543:Generated_Source\PSoC5/UART.c **** 
 544:Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 545:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 546:Generated_Source\PSoC5/UART.c **** 
 547:Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC5/UART.c ****         {
 549:Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 550:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 551:Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC5/UART.c ****             {
 553:Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC5/UART.c ****             }
 555:Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC5/UART.c **** 
 558:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 559:Generated_Source\PSoC5/UART.c ****             {
 560:Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 561:Generated_Source\PSoC5/UART.c ****                 #if( (UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 564:Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART.c ****                             */
 569:Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART.c ****                         }
 571:Generated_Source\PSoC5/UART.c ****                     #else
 572:Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 574:Generated_Source\PSoC5/UART.c ****                 #endif /* UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART.c ****             }
 576:Generated_Source\PSoC5/UART.c **** 
 577:Generated_Source\PSoC5/UART.c ****         }
 578:Generated_Source\PSoC5/UART.c ****         else
 579:Generated_Source\PSoC5/UART.c ****         {   rxStatus = UART_RXSTATUS_REG;
 580:Generated_Source\PSoC5/UART.c ****             if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC5/UART.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART.c ****                 rxData = UART_RXDATA_REG;
 583:Generated_Source\PSoC5/UART.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/UART.c ****                 if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC5/UART.c ****                                 UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/UART.c ****                 {
 587:Generated_Source\PSoC5/UART.c ****                     rxData = 0u;
 588:Generated_Source\PSoC5/UART.c ****                 }
 589:Generated_Source\PSoC5/UART.c ****             }
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 16


 590:Generated_Source\PSoC5/UART.c ****         }
 591:Generated_Source\PSoC5/UART.c **** 
 592:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 593:Generated_Source\PSoC5/UART.c **** 
 594:Generated_Source\PSoC5/UART.c ****     #else
 595:Generated_Source\PSoC5/UART.c **** 
 596:Generated_Source\PSoC5/UART.c ****         rxStatus =UART_RXSTATUS_REG;
 267              		.loc 1 596 0
 268 0000 084B     		ldr	r3, .L28
 269 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 270 0004 DBB2     		uxtb	r3, r3
 271              	.LVL16:
 597:Generated_Source\PSoC5/UART.c ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 272              		.loc 1 597 0
 273 0006 13F0200F 		tst	r3, #32
 274 000a 06D0     		beq	.L26
 598:Generated_Source\PSoC5/UART.c ****         {
 599:Generated_Source\PSoC5/UART.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 275              		.loc 1 600 0
 276 000c 064A     		ldr	r2, .L28+4
 277 000e 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 278 0010 C0B2     		uxtb	r0, r0
 279              	.LVL17:
 601:Generated_Source\PSoC5/UART.c **** 
 602:Generated_Source\PSoC5/UART.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART.c ****             if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 280              		.loc 1 603 0
 281 0012 13F01E0F 		tst	r3, #30
 282 0016 02D1     		bne	.L27
 283 0018 7047     		bx	lr
 284              	.LVL18:
 285              	.L26:
 534:Generated_Source\PSoC5/UART.c ****         uint8 rxStatus;
 286              		.loc 1 534 0
 287 001a 0020     		movs	r0, #0
 288 001c 7047     		bx	lr
 289              	.LVL19:
 290              	.L27:
 604:Generated_Source\PSoC5/UART.c ****                             UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/UART.c ****             {
 606:Generated_Source\PSoC5/UART.c ****                 rxData = 0u;
 291              		.loc 1 606 0
 292 001e 0020     		movs	r0, #0
 293              	.LVL20:
 607:Generated_Source\PSoC5/UART.c ****             }
 608:Generated_Source\PSoC5/UART.c ****         }
 609:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART.c **** 
 611:Generated_Source\PSoC5/UART.c ****         return(rxData);
 612:Generated_Source\PSoC5/UART.c ****     }
 294              		.loc 1 612 0
 295 0020 7047     		bx	lr
 296              	.L29:
 297 0022 00BF     		.align	2
 298              	.L28:
 299 0024 68640040 		.word	1073767528
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 17


 300 0028 4A640040 		.word	1073767498
 301              		.cfi_endproc
 302              	.LFE9:
 303              		.size	UART_GetChar, .-UART_GetChar
 304              		.section	.text.UART_GetByte,"ax",%progbits
 305              		.align	2
 306              		.global	UART_GetByte
 307              		.thumb
 308              		.thumb_func
 309              		.type	UART_GetByte, %function
 310              	UART_GetByte:
 311              	.LFB10:
 613:Generated_Source\PSoC5/UART.c **** 
 614:Generated_Source\PSoC5/UART.c **** 
 615:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetByte
 617:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/UART.c ****     *
 619:Generated_Source\PSoC5/UART.c ****     * Summary:
 620:Generated_Source\PSoC5/UART.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART.c ****     *  condition.
 622:Generated_Source\PSoC5/UART.c ****     *
 623:Generated_Source\PSoC5/UART.c ****     * Parameters:
 624:Generated_Source\PSoC5/UART.c ****     *  None.
 625:Generated_Source\PSoC5/UART.c ****     *
 626:Generated_Source\PSoC5/UART.c ****     * Return:
 627:Generated_Source\PSoC5/UART.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/UART.c ****     *
 630:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 631:Generated_Source\PSoC5/UART.c ****     *  No.
 632:Generated_Source\PSoC5/UART.c ****     *
 633:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART.c ****     uint16 UART_GetByte(void) 
 635:Generated_Source\PSoC5/UART.c ****     {
 312              		.loc 1 635 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316 0000 10B5     		push	{r4, lr}
 317              		.cfi_def_cfa_offset 8
 318              		.cfi_offset 4, -8
 319              		.cfi_offset 14, -4
 636:Generated_Source\PSoC5/UART.c ****         
 637:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 641:Generated_Source\PSoC5/UART.c ****         locErrorStatus = (uint16)UART_errorStatus;
 642:Generated_Source\PSoC5/UART.c ****         UART_errorStatus = 0u;
 643:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 644:Generated_Source\PSoC5/UART.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_ReadRxData() );
 645:Generated_Source\PSoC5/UART.c ****     #else
 646:Generated_Source\PSoC5/UART.c ****         return ( ((uint16)UART_ReadRxStatus() << 8u) | UART_ReadRxData() );
 320              		.loc 1 646 0
 321 0002 FFF7FEFF 		bl	UART_ReadRxStatus
 322              	.LVL21:
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 18


 323 0006 0402     		lsls	r4, r0, #8
 324 0008 FFF7FEFF 		bl	UART_ReadRxData
 325              	.LVL22:
 326 000c 2043     		orrs	r0, r0, r4
 647:Generated_Source\PSoC5/UART.c ****     #endif /* UART_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/UART.c ****         
 649:Generated_Source\PSoC5/UART.c ****     }
 327              		.loc 1 649 0
 328 000e 80B2     		uxth	r0, r0
 329 0010 10BD     		pop	{r4, pc}
 330              		.cfi_endproc
 331              	.LFE10:
 332              		.size	UART_GetByte, .-UART_GetByte
 333 0012 00BF     		.section	.text.UART_GetRxBufferSize,"ax",%progbits
 334              		.align	2
 335              		.global	UART_GetRxBufferSize
 336              		.thumb
 337              		.thumb_func
 338              		.type	UART_GetRxBufferSize, %function
 339              	UART_GetRxBufferSize:
 340              	.LFB11:
 650:Generated_Source\PSoC5/UART.c **** 
 651:Generated_Source\PSoC5/UART.c **** 
 652:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetRxBufferSize
 654:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART.c ****     *
 656:Generated_Source\PSoC5/UART.c ****     * Summary:
 657:Generated_Source\PSoC5/UART.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/UART.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART.c ****     *    account.
 663:Generated_Source\PSoC5/UART.c ****     *
 664:Generated_Source\PSoC5/UART.c ****     * Parameters:
 665:Generated_Source\PSoC5/UART.c ****     *  None.
 666:Generated_Source\PSoC5/UART.c ****     *
 667:Generated_Source\PSoC5/UART.c ****     * Return:
 668:Generated_Source\PSoC5/UART.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/UART.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/UART.c ****     *
 671:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/UART.c ****     *
 676:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 677:Generated_Source\PSoC5/UART.c ****     *  No.
 678:Generated_Source\PSoC5/UART.c ****     *
 679:Generated_Source\PSoC5/UART.c ****     * Theory:
 680:Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART.c ****     *
 682:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/UART.c ****                                                             
 685:Generated_Source\PSoC5/UART.c ****     {
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 19


 341              		.loc 1 685 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 686:Generated_Source\PSoC5/UART.c ****         uint8 size;
 687:Generated_Source\PSoC5/UART.c **** 
 688:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/UART.c **** 
 690:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 692:Generated_Source\PSoC5/UART.c **** 
 693:Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferRead == UART_rxBufferWrite)
 694:Generated_Source\PSoC5/UART.c ****         {
 695:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC5/UART.c ****             {
 697:Generated_Source\PSoC5/UART.c ****                 size = UART_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC5/UART.c ****             }
 699:Generated_Source\PSoC5/UART.c ****             else
 700:Generated_Source\PSoC5/UART.c ****             {
 701:Generated_Source\PSoC5/UART.c ****                 size = 0u;
 702:Generated_Source\PSoC5/UART.c ****             }
 703:Generated_Source\PSoC5/UART.c ****         }
 704:Generated_Source\PSoC5/UART.c ****         else if(UART_rxBufferRead < UART_rxBufferWrite)
 705:Generated_Source\PSoC5/UART.c ****         {
 706:Generated_Source\PSoC5/UART.c ****             size = (UART_rxBufferWrite - UART_rxBufferRead);
 707:Generated_Source\PSoC5/UART.c ****         }
 708:Generated_Source\PSoC5/UART.c ****         else
 709:Generated_Source\PSoC5/UART.c ****         {
 710:Generated_Source\PSoC5/UART.c ****             size = (UART_RX_BUFFER_SIZE - UART_rxBufferRead) + UART_rxBufferWrite;
 711:Generated_Source\PSoC5/UART.c ****         }
 712:Generated_Source\PSoC5/UART.c **** 
 713:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 714:Generated_Source\PSoC5/UART.c **** 
 715:Generated_Source\PSoC5/UART.c ****     #else
 716:Generated_Source\PSoC5/UART.c **** 
 717:Generated_Source\PSoC5/UART.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/UART.c ****         size = ((UART_RXSTATUS_REG & UART_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 346              		.loc 1 718 0
 347 0000 044B     		ldr	r3, .L35
 348 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 349 0004 13F0200F 		tst	r3, #32
 350 0008 01D0     		beq	.L34
 351 000a 0120     		movs	r0, #1
 352 000c 7047     		bx	lr
 353              	.L34:
 354 000e 0020     		movs	r0, #0
 355              	.LVL23:
 719:Generated_Source\PSoC5/UART.c **** 
 720:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/UART.c **** 
 722:Generated_Source\PSoC5/UART.c ****         return(size);
 723:Generated_Source\PSoC5/UART.c ****     }
 356              		.loc 1 723 0
 357 0010 7047     		bx	lr
 358              	.L36:
 359 0012 00BF     		.align	2
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 20


 360              	.L35:
 361 0014 68640040 		.word	1073767528
 362              		.cfi_endproc
 363              	.LFE11:
 364              		.size	UART_GetRxBufferSize, .-UART_GetRxBufferSize
 365              		.section	.text.UART_ClearRxBuffer,"ax",%progbits
 366              		.align	2
 367              		.global	UART_ClearRxBuffer
 368              		.thumb
 369              		.thumb_func
 370              		.type	UART_ClearRxBuffer, %function
 371              	UART_ClearRxBuffer:
 372              	.LFB12:
 724:Generated_Source\PSoC5/UART.c **** 
 725:Generated_Source\PSoC5/UART.c **** 
 726:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearRxBuffer
 728:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART.c ****     *
 730:Generated_Source\PSoC5/UART.c ****     * Summary:
 731:Generated_Source\PSoC5/UART.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/UART.c ****     *
 733:Generated_Source\PSoC5/UART.c ****     * Parameters:
 734:Generated_Source\PSoC5/UART.c ****     *  None.
 735:Generated_Source\PSoC5/UART.c ****     *
 736:Generated_Source\PSoC5/UART.c ****     * Return:
 737:Generated_Source\PSoC5/UART.c ****     *  None.
 738:Generated_Source\PSoC5/UART.c ****     *
 739:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART.c ****     *
 745:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART.c ****     *  No.
 747:Generated_Source\PSoC5/UART.c ****     *
 748:Generated_Source\PSoC5/UART.c ****     * Theory:
 749:Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/UART.c ****     *
 753:Generated_Source\PSoC5/UART.c ****     * Side Effects:
 754:Generated_Source\PSoC5/UART.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART.c ****     *
 756:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/UART.c ****     void UART_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/UART.c ****     {
 373              		.loc 1 758 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377 0000 08B5     		push	{r3, lr}
 378              		.cfi_def_cfa_offset 8
 379              		.cfi_offset 3, -8
 380              		.cfi_offset 14, -4
 759:Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 21


 760:Generated_Source\PSoC5/UART.c **** 
 761:Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 381              		.loc 1 762 0
 382 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 383              	.LVL24:
 763:Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG |= (uint8)  UART_RX_FIFO_CLR;
 384              		.loc 1 763 0
 385 0006 064B     		ldr	r3, .L39
 386 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 387 000a 42F00102 		orr	r2, r2, #1
 388 000e 1A70     		strb	r2, [r3]
 764:Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG &= (uint8) ~UART_RX_FIFO_CLR;
 389              		.loc 1 764 0
 390 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 391 0012 02F0FE02 		and	r2, r2, #254
 392 0016 1A70     		strb	r2, [r3]
 765:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 393              		.loc 1 765 0
 394 0018 FFF7FEFF 		bl	CyExitCriticalSection
 395              	.LVL25:
 396 001c 08BD     		pop	{r3, pc}
 397              	.L40:
 398 001e 00BF     		.align	2
 399              	.L39:
 400 0020 9A640040 		.word	1073767578
 401              		.cfi_endproc
 402              	.LFE12:
 403              		.size	UART_ClearRxBuffer, .-UART_ClearRxBuffer
 404              		.section	.text.UART_SetRxAddressMode,"ax",%progbits
 405              		.align	2
 406              		.global	UART_SetRxAddressMode
 407              		.thumb
 408              		.thumb_func
 409              		.type	UART_SetRxAddressMode, %function
 410              	UART_SetRxAddressMode:
 411              	.LFB13:
 766:Generated_Source\PSoC5/UART.c **** 
 767:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART.c **** 
 769:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 771:Generated_Source\PSoC5/UART.c **** 
 772:Generated_Source\PSoC5/UART.c ****         UART_rxBufferRead = 0u;
 773:Generated_Source\PSoC5/UART.c ****         UART_rxBufferWrite = 0u;
 774:Generated_Source\PSoC5/UART.c ****         UART_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC5/UART.c ****         UART_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC5/UART.c **** 
 777:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 778:Generated_Source\PSoC5/UART.c **** 
 779:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/UART.c **** 
 781:Generated_Source\PSoC5/UART.c ****     }
 782:Generated_Source\PSoC5/UART.c **** 
 783:Generated_Source\PSoC5/UART.c **** 
 784:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddressMode
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 22


 786:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART.c ****     *
 788:Generated_Source\PSoC5/UART.c ****     * Summary:
 789:Generated_Source\PSoC5/UART.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART.c ****     *  UART.
 791:Generated_Source\PSoC5/UART.c ****     *
 792:Generated_Source\PSoC5/UART.c ****     * Parameters:
 793:Generated_Source\PSoC5/UART.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/UART.c ****     *                                               detection
 796:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART.c ****     *                                               address detection
 798:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART.c ****     *                                               detection
 800:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART.c ****     *                                               address detection
 802:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART.c ****     *
 804:Generated_Source\PSoC5/UART.c ****     * Return:
 805:Generated_Source\PSoC5/UART.c ****     *  None.
 806:Generated_Source\PSoC5/UART.c ****     *
 807:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 808:Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART.c ****     *
 812:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/UART.c ****                                                         
 815:Generated_Source\PSoC5/UART.c ****     {
 412              		.loc 1 815 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 417              	.LVL26:
 816:Generated_Source\PSoC5/UART.c ****         #if(UART_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART.c ****             #if(UART_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/UART.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART.c ****                 {
 820:Generated_Source\PSoC5/UART.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART.c ****                 }
 822:Generated_Source\PSoC5/UART.c ****             #else /* UART_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/UART.c ****                 tmpCtrl = UART_CONTROL_REG & (uint8)~UART_CTRL_RXADDR_MODE_MASK;
 418              		.loc 1 824 0
 419 0000 044A     		ldr	r2, .L42
 420 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 421 0004 03F01F03 		and	r3, r3, #31
 422              	.LVL27:
 825:Generated_Source\PSoC5/UART.c ****                 tmpCtrl |= (uint8)(addressMode << UART_CTRL_RXADDR_MODE0_SHIFT);
 423              		.loc 1 825 0
 424 0008 4001     		lsls	r0, r0, #5
 425              	.LVL28:
 426 000a C0B2     		uxtb	r0, r0
 427 000c 0343     		orrs	r3, r3, r0
 428              	.LVL29:
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 23


 826:Generated_Source\PSoC5/UART.c ****                 UART_CONTROL_REG = tmpCtrl;
 429              		.loc 1 826 0
 430 000e 1370     		strb	r3, [r2]
 431 0010 7047     		bx	lr
 432              	.L43:
 433 0012 00BF     		.align	2
 434              	.L42:
 435 0014 7B640040 		.word	1073767547
 436              		.cfi_endproc
 437              	.LFE13:
 438              		.size	UART_SetRxAddressMode, .-UART_SetRxAddressMode
 439              		.section	.text.UART_SetRxAddress1,"ax",%progbits
 440              		.align	2
 441              		.global	UART_SetRxAddress1
 442              		.thumb
 443              		.thumb_func
 444              		.type	UART_SetRxAddress1, %function
 445              	UART_SetRxAddress1:
 446              	.LFB14:
 827:Generated_Source\PSoC5/UART.c **** 
 828:Generated_Source\PSoC5/UART.c ****                 #if(UART_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/UART.c ****                    (UART_RXBUFFERSIZE > UART_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/UART.c ****                     UART_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART.c ****                     UART_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_RXBUFFERSIZE > UART_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/UART.c ****         #else /* UART_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/UART.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/UART.c ****             {
 837:Generated_Source\PSoC5/UART.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/UART.c ****             }
 839:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/UART.c ****     }
 841:Generated_Source\PSoC5/UART.c **** 
 842:Generated_Source\PSoC5/UART.c **** 
 843:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress1
 845:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/UART.c ****     *
 847:Generated_Source\PSoC5/UART.c ****     * Summary:
 848:Generated_Source\PSoC5/UART.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART.c ****     *
 850:Generated_Source\PSoC5/UART.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART.c ****     *
 853:Generated_Source\PSoC5/UART.c ****     * Return:
 854:Generated_Source\PSoC5/UART.c ****     *  None.
 855:Generated_Source\PSoC5/UART.c ****     *
 856:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART.c ****     {
 447              		.loc 1 858 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451              		@ link register save eliminated.
 452              	.LVL30:
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 24


 859:Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS1_REG = address;
 453              		.loc 1 859 0
 454 0000 014B     		ldr	r3, .L45
 455 0002 1870     		strb	r0, [r3]
 456 0004 7047     		bx	lr
 457              	.L46:
 458 0006 00BF     		.align	2
 459              	.L45:
 460 0008 2A640040 		.word	1073767466
 461              		.cfi_endproc
 462              	.LFE14:
 463              		.size	UART_SetRxAddress1, .-UART_SetRxAddress1
 464              		.section	.text.UART_SetRxAddress2,"ax",%progbits
 465              		.align	2
 466              		.global	UART_SetRxAddress2
 467              		.thumb
 468              		.thumb_func
 469              		.type	UART_SetRxAddress2, %function
 470              	UART_SetRxAddress2:
 471              	.LFB15:
 860:Generated_Source\PSoC5/UART.c ****     }
 861:Generated_Source\PSoC5/UART.c **** 
 862:Generated_Source\PSoC5/UART.c **** 
 863:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress2
 865:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/UART.c ****     *
 867:Generated_Source\PSoC5/UART.c ****     * Summary:
 868:Generated_Source\PSoC5/UART.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART.c ****     *
 870:Generated_Source\PSoC5/UART.c ****     * Parameters:
 871:Generated_Source\PSoC5/UART.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART.c ****     *
 873:Generated_Source\PSoC5/UART.c ****     * Return:
 874:Generated_Source\PSoC5/UART.c ****     *  None.
 875:Generated_Source\PSoC5/UART.c ****     *
 876:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART.c ****     {
 472              		.loc 1 878 0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476              		@ link register save eliminated.
 477              	.LVL31:
 879:Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS2_REG = address;
 478              		.loc 1 879 0
 479 0000 014B     		ldr	r3, .L48
 480 0002 1870     		strb	r0, [r3]
 481 0004 7047     		bx	lr
 482              	.L49:
 483 0006 00BF     		.align	2
 484              	.L48:
 485 0008 3A640040 		.word	1073767482
 486              		.cfi_endproc
 487              	.LFE15:
 488              		.size	UART_SetRxAddress2, .-UART_SetRxAddress2
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 25


 489              		.section	.text.UART_Init,"ax",%progbits
 490              		.align	2
 491              		.global	UART_Init
 492              		.thumb
 493              		.thumb_func
 494              		.type	UART_Init, %function
 495              	UART_Init:
 496              	.LFB1:
 107:Generated_Source\PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 497              		.loc 1 107 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501 0000 08B5     		push	{r3, lr}
 502              		.cfi_def_cfa_offset 8
 503              		.cfi_offset 3, -8
 504              		.cfi_offset 14, -4
 118:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress1(UART_RX_HW_ADDRESS1);
 505              		.loc 1 118 0
 506 0002 0420     		movs	r0, #4
 507 0004 FFF7FEFF 		bl	UART_SetRxAddressMode
 508              	.LVL32:
 119:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress2(UART_RX_HW_ADDRESS2);
 509              		.loc 1 119 0
 510 0008 0F20     		movs	r0, #15
 511 000a FFF7FEFF 		bl	UART_SetRxAddress1
 512              	.LVL33:
 120:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 513              		.loc 1 120 0
 514 000e 0020     		movs	r0, #0
 515 0010 FFF7FEFF 		bl	UART_SetRxAddress2
 516              	.LVL34:
 124:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial RX interrupt mask */
 517              		.loc 1 124 0
 518 0014 7222     		movs	r2, #114
 519 0016 084B     		ldr	r3, .L52
 520 0018 1A70     		strb	r2, [r3]
 126:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 521              		.loc 1 126 0
 522 001a 2022     		movs	r2, #32
 523 001c A3F20113 		subw	r3, r3, #257
 524 0020 1A70     		strb	r2, [r3]
 138:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
 525              		.loc 1 138 0
 526 0022 0622     		movs	r2, #6
 527 0024 5F3B     		subs	r3, r3, #95
 528 0026 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 529              		.loc 1 139 0
 530 0028 4722     		movs	r2, #71
 531 002a 1033     		adds	r3, r3, #16
 532 002c 1A70     		strb	r2, [r3]
 150:Generated_Source\PSoC5/UART.c ****         #endif /*End UART_TX_INTERRUPT_ENABLED*/
 533              		.loc 1 150 0
 534 002e 0022     		movs	r2, #0
 535 0030 03F5A973 		add	r3, r3, #338
 536 0034 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 26


 537 0036 08BD     		pop	{r3, pc}
 538              	.L53:
 539              		.align	2
 540              	.L52:
 541 0038 89650040 		.word	1073767817
 542              		.cfi_endproc
 543              	.LFE1:
 544              		.size	UART_Init, .-UART_Init
 545              		.section	.text.UART_Start,"ax",%progbits
 546              		.align	2
 547              		.global	UART_Start
 548              		.thumb
 549              		.thumb_func
 550              		.type	UART_Start, %function
 551              	UART_Start:
 552              	.LFB0:
  77:Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
 553              		.loc 1 77 0
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 0
 556              		@ frame_needed = 0, uses_anonymous_args = 0
 557 0000 08B5     		push	{r3, lr}
 558              		.cfi_def_cfa_offset 8
 559              		.cfi_offset 3, -8
 560              		.cfi_offset 14, -4
  79:Generated_Source\PSoC5/UART.c ****     {
 561              		.loc 1 79 0
 562 0002 054B     		ldr	r3, .L57
 563 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 564 0006 23B9     		cbnz	r3, .L55
  81:Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
 565              		.loc 1 81 0
 566 0008 FFF7FEFF 		bl	UART_Init
 567              	.LVL35:
  82:Generated_Source\PSoC5/UART.c ****     }
 568              		.loc 1 82 0
 569 000c 0122     		movs	r2, #1
 570 000e 024B     		ldr	r3, .L57
 571 0010 1A70     		strb	r2, [r3]
 572              	.L55:
  85:Generated_Source\PSoC5/UART.c **** }
 573              		.loc 1 85 0
 574 0012 FFF7FEFF 		bl	UART_Enable
 575              	.LVL36:
 576 0016 08BD     		pop	{r3, pc}
 577              	.L58:
 578              		.align	2
 579              	.L57:
 580 0018 00000000 		.word	.LANCHOR0
 581              		.cfi_endproc
 582              	.LFE0:
 583              		.size	UART_Start, .-UART_Start
 584              		.section	.text.UART_SetTxInterruptMode,"ax",%progbits
 585              		.align	2
 586              		.global	UART_SetTxInterruptMode
 587              		.thumb
 588              		.thumb_func
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 27


 589              		.type	UART_SetTxInterruptMode, %function
 590              	UART_SetTxInterruptMode:
 591              	.LFB16:
 880:Generated_Source\PSoC5/UART.c ****     }
 881:Generated_Source\PSoC5/UART.c **** 
 882:Generated_Source\PSoC5/UART.c **** #endif  /* UART_RX_ENABLED || UART_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART.c **** 
 884:Generated_Source\PSoC5/UART.c **** 
 885:Generated_Source\PSoC5/UART.c **** #if( (UART_TX_ENABLED) || (UART_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxInterruptMode
 888:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/UART.c ****     *
 890:Generated_Source\PSoC5/UART.c ****     * Summary:
 891:Generated_Source\PSoC5/UART.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART.c ****     *
 894:Generated_Source\PSoC5/UART.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/UART.c ****     *
 901:Generated_Source\PSoC5/UART.c ****     * Return:
 902:Generated_Source\PSoC5/UART.c ****     *  None.
 903:Generated_Source\PSoC5/UART.c ****     *
 904:Generated_Source\PSoC5/UART.c ****     * Theory:
 905:Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART.c ****     *
 907:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART.c ****     void UART_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART.c ****     {
 592              		.loc 1 909 0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 0
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 596              		@ link register save eliminated.
 597              	.LVL37:
 910:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_MASK_REG = intSrc;
 598              		.loc 1 910 0
 599 0000 014B     		ldr	r3, .L60
 600 0002 1870     		strb	r0, [r3]
 601 0004 7047     		bx	lr
 602              	.L61:
 603 0006 00BF     		.align	2
 604              	.L60:
 605 0008 8B650040 		.word	1073767819
 606              		.cfi_endproc
 607              	.LFE16:
 608              		.size	UART_SetTxInterruptMode, .-UART_SetTxInterruptMode
 609              		.section	.text.UART_WriteTxData,"ax",%progbits
 610              		.align	2
 611              		.global	UART_WriteTxData
 612              		.thumb
 613              		.thumb_func
 614              		.type	UART_WriteTxData, %function
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 28


 615              	UART_WriteTxData:
 616              	.LFB17:
 911:Generated_Source\PSoC5/UART.c ****     }
 912:Generated_Source\PSoC5/UART.c **** 
 913:Generated_Source\PSoC5/UART.c **** 
 914:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_WriteTxData
 916:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART.c ****     *
 918:Generated_Source\PSoC5/UART.c ****     * Summary:
 919:Generated_Source\PSoC5/UART.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/UART.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/UART.c ****     *  separately.
 922:Generated_Source\PSoC5/UART.c ****     *
 923:Generated_Source\PSoC5/UART.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART.c ****     *
 926:Generated_Source\PSoC5/UART.c ****     * Return:
 927:Generated_Source\PSoC5/UART.c ****     * None.
 928:Generated_Source\PSoC5/UART.c ****     *
 929:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 930:Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART.c ****     *
 938:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 939:Generated_Source\PSoC5/UART.c ****     *  No.
 940:Generated_Source\PSoC5/UART.c ****     *
 941:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART.c ****     void UART_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART.c ****     {
 617              		.loc 1 943 0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621              		@ link register save eliminated.
 622              	.LVL38:
 944:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 623              		.loc 1 945 0
 624 0000 024B     		ldr	r3, .L64
 625 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 626 0004 0BB1     		cbz	r3, .L62
 946:Generated_Source\PSoC5/UART.c ****         {
 947:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/UART.c **** 
 949:Generated_Source\PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 951:Generated_Source\PSoC5/UART.c **** 
 952:Generated_Source\PSoC5/UART.c ****             if( (UART_txBufferRead == UART_txBufferWrite) &&
 953:Generated_Source\PSoC5/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC5/UART.c ****             {
 955:Generated_Source\PSoC5/UART.c ****                 /* Add directly to the FIFO. */
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 29


 956:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = txDataByte;
 957:Generated_Source\PSoC5/UART.c ****             }
 958:Generated_Source\PSoC5/UART.c ****             else
 959:Generated_Source\PSoC5/UART.c ****             {
 960:Generated_Source\PSoC5/UART.c ****                 if(UART_txBufferWrite >= UART_TX_BUFFER_SIZE)
 961:Generated_Source\PSoC5/UART.c ****                 {
 962:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite = 0u;
 963:Generated_Source\PSoC5/UART.c ****                 }
 964:Generated_Source\PSoC5/UART.c **** 
 965:Generated_Source\PSoC5/UART.c ****                 UART_txBuffer[UART_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC5/UART.c **** 
 967:Generated_Source\PSoC5/UART.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/UART.c ****                 UART_txBufferWrite++;
 969:Generated_Source\PSoC5/UART.c ****             }
 970:Generated_Source\PSoC5/UART.c **** 
 971:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 972:Generated_Source\PSoC5/UART.c **** 
 973:Generated_Source\PSoC5/UART.c ****         #else
 974:Generated_Source\PSoC5/UART.c **** 
 975:Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
 627              		.loc 1 976 0
 628 0006 024B     		ldr	r3, .L64+4
 629 0008 1870     		strb	r0, [r3]
 630              	.L62:
 631 000a 7047     		bx	lr
 632              	.L65:
 633              		.align	2
 634              	.L64:
 635 000c 00000000 		.word	.LANCHOR0
 636 0010 48650040 		.word	1073767752
 637              		.cfi_endproc
 638              	.LFE17:
 639              		.size	UART_WriteTxData, .-UART_WriteTxData
 640              		.section	.text.UART_ReadTxStatus,"ax",%progbits
 641              		.align	2
 642              		.global	UART_ReadTxStatus
 643              		.thumb
 644              		.thumb_func
 645              		.type	UART_ReadTxStatus, %function
 646              	UART_ReadTxStatus:
 647              	.LFB18:
 977:Generated_Source\PSoC5/UART.c **** 
 978:Generated_Source\PSoC5/UART.c ****         #endif /*(UART_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART.c ****         }
 980:Generated_Source\PSoC5/UART.c ****     }
 981:Generated_Source\PSoC5/UART.c **** 
 982:Generated_Source\PSoC5/UART.c **** 
 983:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadTxStatus
 985:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART.c ****     *
 987:Generated_Source\PSoC5/UART.c ****     * Summary:
 988:Generated_Source\PSoC5/UART.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART.c ****     *
 990:Generated_Source\PSoC5/UART.c ****     * Parameters:
 991:Generated_Source\PSoC5/UART.c ****     *  None.
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 30


 992:Generated_Source\PSoC5/UART.c ****     *
 993:Generated_Source\PSoC5/UART.c ****     * Return:
 994:Generated_Source\PSoC5/UART.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART.c ****     *
 996:Generated_Source\PSoC5/UART.c ****     * Theory:
 997:Generated_Source\PSoC5/UART.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/UART.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART.c ****     *
1002:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/UART.c ****     {
 648              		.loc 1 1004 0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 0
 651              		@ frame_needed = 0, uses_anonymous_args = 0
 652              		@ link register save eliminated.
1005:Generated_Source\PSoC5/UART.c ****         return(UART_TXSTATUS_REG);
 653              		.loc 1 1005 0
 654 0000 014B     		ldr	r3, .L67
 655 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:Generated_Source\PSoC5/UART.c ****     }
 656              		.loc 1 1006 0
 657 0004 7047     		bx	lr
 658              	.L68:
 659 0006 00BF     		.align	2
 660              	.L67:
 661 0008 6B650040 		.word	1073767787
 662              		.cfi_endproc
 663              	.LFE18:
 664              		.size	UART_ReadTxStatus, .-UART_ReadTxStatus
 665              		.section	.text.UART_PutChar,"ax",%progbits
 666              		.align	2
 667              		.global	UART_PutChar
 668              		.thumb
 669              		.thumb_func
 670              		.type	UART_PutChar, %function
 671              	UART_PutChar:
 672              	.LFB19:
1007:Generated_Source\PSoC5/UART.c **** 
1008:Generated_Source\PSoC5/UART.c **** 
1009:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutChar
1011:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/UART.c ****     *
1013:Generated_Source\PSoC5/UART.c ****     * Summary:
1014:Generated_Source\PSoC5/UART.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART.c ****     *
1018:Generated_Source\PSoC5/UART.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/UART.c ****     *
1021:Generated_Source\PSoC5/UART.c ****     * Return:
1022:Generated_Source\PSoC5/UART.c ****     *  None.
1023:Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 31


1024:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/UART.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/UART.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART.c ****     *
1034:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1035:Generated_Source\PSoC5/UART.c ****     *  No.
1036:Generated_Source\PSoC5/UART.c ****     *
1037:Generated_Source\PSoC5/UART.c ****     * Theory:
1038:Generated_Source\PSoC5/UART.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART.c ****     *
1040:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/UART.c ****     void UART_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/UART.c ****     {
 673              		.loc 1 1042 0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 0
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 677              		@ link register save eliminated.
 678              	.LVL39:
 679              	.L70:
1043:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/UART.c ****         */
1048:Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/UART.c **** 
1051:Generated_Source\PSoC5/UART.c ****         do
1052:Generated_Source\PSoC5/UART.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART.c **** 
1054:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/UART.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1057:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART.c **** 
1059:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite = UART_txBufferWrite;
1060:Generated_Source\PSoC5/UART.c ****             locTxBufferRead  = UART_txBufferRead;
1061:Generated_Source\PSoC5/UART.c **** 
1062:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1065:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/UART.c ****         }
1067:Generated_Source\PSoC5/UART.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC5/UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC5/UART.c ****                                 (uint8)(UART_TX_BUFFER_SIZE - 1u)) );
1070:Generated_Source\PSoC5/UART.c **** 
1071:Generated_Source\PSoC5/UART.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC5/UART.c ****         {
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 32


1074:Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC5/UART.c ****         }
1077:Generated_Source\PSoC5/UART.c ****         else
1078:Generated_Source\PSoC5/UART.c ****         {
1079:Generated_Source\PSoC5/UART.c ****             if(locTxBufferWrite >= UART_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/UART.c ****             {
1081:Generated_Source\PSoC5/UART.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC5/UART.c ****             }
1083:Generated_Source\PSoC5/UART.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART.c ****             UART_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/UART.c **** 
1087:Generated_Source\PSoC5/UART.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1090:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART.c **** 
1092:Generated_Source\PSoC5/UART.c ****             UART_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC5/UART.c **** 
1094:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1096:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/UART.c **** 
1098:Generated_Source\PSoC5/UART.c ****             if(0u != (UART_TXSTATUS_REG & UART_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC5/UART.c ****             {
1100:Generated_Source\PSoC5/UART.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/UART.c ****                 UART_SetPendingTxInt();
1102:Generated_Source\PSoC5/UART.c ****             }
1103:Generated_Source\PSoC5/UART.c ****         }
1104:Generated_Source\PSoC5/UART.c **** 
1105:Generated_Source\PSoC5/UART.c ****     #else
1106:Generated_Source\PSoC5/UART.c **** 
1107:Generated_Source\PSoC5/UART.c ****         while((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) != 0u)
 680              		.loc 1 1107 0 discriminator 1
 681 0000 034B     		ldr	r3, .L71
 682 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 683 0004 13F0040F 		tst	r3, #4
 684 0008 FAD1     		bne	.L70
1108:Generated_Source\PSoC5/UART.c ****         {
1109:Generated_Source\PSoC5/UART.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART.c ****         }
1111:Generated_Source\PSoC5/UART.c **** 
1112:Generated_Source\PSoC5/UART.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_REG = txDataByte;
 685              		.loc 1 1113 0
 686 000a 024B     		ldr	r3, .L71+4
 687 000c 1870     		strb	r0, [r3]
 688 000e 7047     		bx	lr
 689              	.L72:
 690              		.align	2
 691              	.L71:
 692 0010 6B650040 		.word	1073767787
 693 0014 48650040 		.word	1073767752
 694              		.cfi_endproc
 695              	.LFE19:
 696              		.size	UART_PutChar, .-UART_PutChar
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 33


 697              		.section	.text.UART_PutString,"ax",%progbits
 698              		.align	2
 699              		.global	UART_PutString
 700              		.thumb
 701              		.thumb_func
 702              		.type	UART_PutString, %function
 703              	UART_PutString:
 704              	.LFB20:
1114:Generated_Source\PSoC5/UART.c **** 
1115:Generated_Source\PSoC5/UART.c ****     #endif /* UART_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/UART.c ****     }
1117:Generated_Source\PSoC5/UART.c **** 
1118:Generated_Source\PSoC5/UART.c **** 
1119:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutString
1121:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/UART.c ****     *
1123:Generated_Source\PSoC5/UART.c ****     * Summary:
1124:Generated_Source\PSoC5/UART.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/UART.c ****     *
1126:Generated_Source\PSoC5/UART.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/UART.c ****     *
1129:Generated_Source\PSoC5/UART.c ****     * Return:
1130:Generated_Source\PSoC5/UART.c ****     *  None.
1131:Generated_Source\PSoC5/UART.c ****     *
1132:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1133:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART.c ****     *
1136:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART.c ****     *  No.
1138:Generated_Source\PSoC5/UART.c ****     *
1139:Generated_Source\PSoC5/UART.c ****     * Theory:
1140:Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART.c ****     *
1144:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/UART.c ****     void UART_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/UART.c ****     {
 705              		.loc 1 1146 0
 706              		.cfi_startproc
 707              		@ args = 0, pretend = 0, frame = 0
 708              		@ frame_needed = 0, uses_anonymous_args = 0
 709              	.LVL40:
 710 0000 38B5     		push	{r3, r4, r5, lr}
 711              		.cfi_def_cfa_offset 16
 712              		.cfi_offset 3, -16
 713              		.cfi_offset 4, -12
 714              		.cfi_offset 5, -8
 715              		.cfi_offset 14, -4
 716              	.LVL41:
1147:Generated_Source\PSoC5/UART.c ****         uint16 bufIndex = 0u;
1148:Generated_Source\PSoC5/UART.c **** 
1149:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 34


 717              		.loc 1 1150 0
 718 0002 074B     		ldr	r3, .L79
 719 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 720 0006 2BB9     		cbnz	r3, .L77
 721 0008 38BD     		pop	{r3, r4, r5, pc}
 722              	.LVL42:
 723              	.L76:
1151:Generated_Source\PSoC5/UART.c ****         {
1152:Generated_Source\PSoC5/UART.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/UART.c ****             while(string[bufIndex] != (char8) 0)
1154:Generated_Source\PSoC5/UART.c ****             {
1155:Generated_Source\PSoC5/UART.c ****                 UART_PutChar((uint8)string[bufIndex]);
 724              		.loc 1 1155 0
 725 000a FFF7FEFF 		bl	UART_PutChar
 726              	.LVL43:
1156:Generated_Source\PSoC5/UART.c ****                 bufIndex++;
 727              		.loc 1 1156 0
 728 000e 0134     		adds	r4, r4, #1
 729              	.LVL44:
 730 0010 A4B2     		uxth	r4, r4
 731              	.LVL45:
 732 0012 01E0     		b	.L74
 733              	.LVL46:
 734              	.L77:
 735 0014 0546     		mov	r5, r0
 736 0016 0024     		movs	r4, #0
 737              	.LVL47:
 738              	.L74:
1153:Generated_Source\PSoC5/UART.c ****             {
 739              		.loc 1 1153 0
 740 0018 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 741 001a 0028     		cmp	r0, #0
 742 001c F5D1     		bne	.L76
 743 001e 38BD     		pop	{r3, r4, r5, pc}
 744              	.LVL48:
 745              	.L80:
 746              		.align	2
 747              	.L79:
 748 0020 00000000 		.word	.LANCHOR0
 749              		.cfi_endproc
 750              	.LFE20:
 751              		.size	UART_PutString, .-UART_PutString
 752              		.section	.text.UART_PutArray,"ax",%progbits
 753              		.align	2
 754              		.global	UART_PutArray
 755              		.thumb
 756              		.thumb_func
 757              		.type	UART_PutArray, %function
 758              	UART_PutArray:
 759              	.LFB21:
1157:Generated_Source\PSoC5/UART.c ****             }
1158:Generated_Source\PSoC5/UART.c ****         }
1159:Generated_Source\PSoC5/UART.c ****     }
1160:Generated_Source\PSoC5/UART.c **** 
1161:Generated_Source\PSoC5/UART.c **** 
1162:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutArray
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 35


1164:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/UART.c ****     *
1166:Generated_Source\PSoC5/UART.c ****     * Summary:
1167:Generated_Source\PSoC5/UART.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/UART.c ****     *  transmission.
1169:Generated_Source\PSoC5/UART.c ****     *
1170:Generated_Source\PSoC5/UART.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/UART.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/UART.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/UART.c ****     *
1175:Generated_Source\PSoC5/UART.c ****     * Return:
1176:Generated_Source\PSoC5/UART.c ****     *  None.
1177:Generated_Source\PSoC5/UART.c ****     *
1178:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1179:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/UART.c ****     *     initialized.
1181:Generated_Source\PSoC5/UART.c ****     *
1182:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1183:Generated_Source\PSoC5/UART.c ****     *  No.
1184:Generated_Source\PSoC5/UART.c ****     *
1185:Generated_Source\PSoC5/UART.c ****     * Theory:
1186:Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/UART.c ****     *
1190:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/UART.c ****     void UART_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/UART.c ****                                                                     
1193:Generated_Source\PSoC5/UART.c ****     {
 760              		.loc 1 1193 0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 0
 763              		@ frame_needed = 0, uses_anonymous_args = 0
 764              	.LVL49:
1194:Generated_Source\PSoC5/UART.c ****         uint8 bufIndex = 0u;
1195:Generated_Source\PSoC5/UART.c **** 
1196:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 765              		.loc 1 1197 0
 766 0000 084B     		ldr	r3, .L87
 767 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 768 0004 33B9     		cbnz	r3, .L85
 769 0006 7047     		bx	lr
 770              	.LVL50:
 771              	.L84:
 772              		.cfi_def_cfa_offset 16
 773              		.cfi_offset 4, -16
 774              		.cfi_offset 5, -12
 775              		.cfi_offset 6, -8
 776              		.cfi_offset 14, -4
1198:Generated_Source\PSoC5/UART.c ****         {
1199:Generated_Source\PSoC5/UART.c ****             while(bufIndex < byteCount)
1200:Generated_Source\PSoC5/UART.c ****             {
1201:Generated_Source\PSoC5/UART.c ****                 UART_PutChar(string[bufIndex]);
 777              		.loc 1 1201 0
 778 0008 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 36


 779 000a FFF7FEFF 		bl	UART_PutChar
 780              	.LVL51:
1202:Generated_Source\PSoC5/UART.c ****                 bufIndex++;
 781              		.loc 1 1202 0
 782 000e 0134     		adds	r4, r4, #1
 783              	.LVL52:
 784 0010 E4B2     		uxtb	r4, r4
 785              	.LVL53:
 786 0012 03E0     		b	.L82
 787              	.LVL54:
 788              	.L85:
 789              		.cfi_def_cfa_offset 0
 790              		.cfi_restore 4
 791              		.cfi_restore 5
 792              		.cfi_restore 6
 793              		.cfi_restore 14
1193:Generated_Source\PSoC5/UART.c ****         uint8 bufIndex = 0u;
 794              		.loc 1 1193 0
 795 0014 70B5     		push	{r4, r5, r6, lr}
 796              		.cfi_def_cfa_offset 16
 797              		.cfi_offset 4, -16
 798              		.cfi_offset 5, -12
 799              		.cfi_offset 6, -8
 800              		.cfi_offset 14, -4
 801 0016 0D46     		mov	r5, r1
 802 0018 0646     		mov	r6, r0
 803 001a 0024     		movs	r4, #0
 804              	.LVL55:
 805              	.L82:
1199:Generated_Source\PSoC5/UART.c ****             {
 806              		.loc 1 1199 0
 807 001c AC42     		cmp	r4, r5
 808 001e F3D3     		bcc	.L84
 809 0020 70BD     		pop	{r4, r5, r6, pc}
 810              	.LVL56:
 811              	.L88:
 812 0022 00BF     		.align	2
 813              	.L87:
 814 0024 00000000 		.word	.LANCHOR0
 815              		.cfi_endproc
 816              	.LFE21:
 817              		.size	UART_PutArray, .-UART_PutArray
 818              		.section	.text.UART_PutCRLF,"ax",%progbits
 819              		.align	2
 820              		.global	UART_PutCRLF
 821              		.thumb
 822              		.thumb_func
 823              		.type	UART_PutCRLF, %function
 824              	UART_PutCRLF:
 825              	.LFB22:
1203:Generated_Source\PSoC5/UART.c ****             }
1204:Generated_Source\PSoC5/UART.c ****         }
1205:Generated_Source\PSoC5/UART.c ****     }
1206:Generated_Source\PSoC5/UART.c **** 
1207:Generated_Source\PSoC5/UART.c **** 
1208:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutCRLF
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 37


1210:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/UART.c ****     *
1212:Generated_Source\PSoC5/UART.c ****     * Summary:
1213:Generated_Source\PSoC5/UART.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/UART.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/UART.c ****     *
1216:Generated_Source\PSoC5/UART.c ****     * Parameters:
1217:Generated_Source\PSoC5/UART.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/UART.c ****     *
1219:Generated_Source\PSoC5/UART.c ****     * Return:
1220:Generated_Source\PSoC5/UART.c ****     *  None.
1221:Generated_Source\PSoC5/UART.c ****     *
1222:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1223:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/UART.c ****     *     initialized.
1225:Generated_Source\PSoC5/UART.c ****     *
1226:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1227:Generated_Source\PSoC5/UART.c ****     *  No.
1228:Generated_Source\PSoC5/UART.c ****     *
1229:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/UART.c ****     void UART_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/UART.c ****     {
 826              		.loc 1 1231 0
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 0
 829              		@ frame_needed = 0, uses_anonymous_args = 0
 830              	.LVL57:
 831 0000 08B5     		push	{r3, lr}
 832              		.cfi_def_cfa_offset 8
 833              		.cfi_offset 3, -8
 834              		.cfi_offset 14, -4
1232:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 835              		.loc 1 1233 0
 836 0002 064B     		ldr	r3, .L92
 837 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 838 0006 3BB1     		cbz	r3, .L89
1234:Generated_Source\PSoC5/UART.c ****         {
1235:Generated_Source\PSoC5/UART.c ****             UART_PutChar(txDataByte);
 839              		.loc 1 1235 0
 840 0008 FFF7FEFF 		bl	UART_PutChar
 841              	.LVL58:
1236:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Du);
 842              		.loc 1 1236 0
 843 000c 0D20     		movs	r0, #13
 844 000e FFF7FEFF 		bl	UART_PutChar
 845              	.LVL59:
1237:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Au);
 846              		.loc 1 1237 0
 847 0012 0A20     		movs	r0, #10
 848 0014 FFF7FEFF 		bl	UART_PutChar
 849              	.LVL60:
 850              	.L89:
 851 0018 08BD     		pop	{r3, pc}
 852              	.L93:
 853 001a 00BF     		.align	2
 854              	.L92:
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 38


 855 001c 00000000 		.word	.LANCHOR0
 856              		.cfi_endproc
 857              	.LFE22:
 858              		.size	UART_PutCRLF, .-UART_PutCRLF
 859              		.section	.text.UART_GetTxBufferSize,"ax",%progbits
 860              		.align	2
 861              		.global	UART_GetTxBufferSize
 862              		.thumb
 863              		.thumb_func
 864              		.type	UART_GetTxBufferSize, %function
 865              	UART_GetTxBufferSize:
 866              	.LFB23:
1238:Generated_Source\PSoC5/UART.c ****         }
1239:Generated_Source\PSoC5/UART.c ****     }
1240:Generated_Source\PSoC5/UART.c **** 
1241:Generated_Source\PSoC5/UART.c **** 
1242:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetTxBufferSize
1244:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/UART.c ****     *
1246:Generated_Source\PSoC5/UART.c ****     * Summary:
1247:Generated_Source\PSoC5/UART.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/UART.c ****     *  transmitted.
1249:Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/UART.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/UART.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/UART.c ****     *
1255:Generated_Source\PSoC5/UART.c ****     * Parameters:
1256:Generated_Source\PSoC5/UART.c ****     *  None.
1257:Generated_Source\PSoC5/UART.c ****     *
1258:Generated_Source\PSoC5/UART.c ****     * Return:
1259:Generated_Source\PSoC5/UART.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/UART.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/UART.c ****     *
1262:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1263:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/UART.c ****     *
1266:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1267:Generated_Source\PSoC5/UART.c ****     *  No.
1268:Generated_Source\PSoC5/UART.c ****     *
1269:Generated_Source\PSoC5/UART.c ****     * Theory:
1270:Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/UART.c ****     *
1272:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/UART.c ****                                                             
1275:Generated_Source\PSoC5/UART.c ****     {
 867              		.loc 1 1275 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 0
 870              		@ frame_needed = 0, uses_anonymous_args = 0
 871              		@ link register save eliminated.
1276:Generated_Source\PSoC5/UART.c ****         uint8 size;
1277:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 39


1278:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/UART.c **** 
1280:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
1282:Generated_Source\PSoC5/UART.c **** 
1283:Generated_Source\PSoC5/UART.c ****         if(UART_txBufferRead == UART_txBufferWrite)
1284:Generated_Source\PSoC5/UART.c ****         {
1285:Generated_Source\PSoC5/UART.c ****             size = 0u;
1286:Generated_Source\PSoC5/UART.c ****         }
1287:Generated_Source\PSoC5/UART.c ****         else if(UART_txBufferRead < UART_txBufferWrite)
1288:Generated_Source\PSoC5/UART.c ****         {
1289:Generated_Source\PSoC5/UART.c ****             size = (UART_txBufferWrite - UART_txBufferRead);
1290:Generated_Source\PSoC5/UART.c ****         }
1291:Generated_Source\PSoC5/UART.c ****         else
1292:Generated_Source\PSoC5/UART.c ****         {
1293:Generated_Source\PSoC5/UART.c ****             size = (UART_TX_BUFFER_SIZE - UART_txBufferRead) +
1294:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite;
1295:Generated_Source\PSoC5/UART.c ****         }
1296:Generated_Source\PSoC5/UART.c **** 
1297:Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
1298:Generated_Source\PSoC5/UART.c **** 
1299:Generated_Source\PSoC5/UART.c ****     #else
1300:Generated_Source\PSoC5/UART.c **** 
1301:Generated_Source\PSoC5/UART.c ****         size = UART_TXSTATUS_REG;
 872              		.loc 1 1301 0
 873 0000 074B     		ldr	r3, .L98
 874 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 875 0004 DBB2     		uxtb	r3, r3
 876              	.LVL61:
1302:Generated_Source\PSoC5/UART.c **** 
1303:Generated_Source\PSoC5/UART.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/UART.c ****         if((size & UART_TX_STS_FIFO_FULL) != 0u)
 877              		.loc 1 1304 0
 878 0006 13F0040F 		tst	r3, #4
 879 000a 04D1     		bne	.L96
1305:Generated_Source\PSoC5/UART.c ****         {
1306:Generated_Source\PSoC5/UART.c ****             size = UART_FIFO_LENGTH;
1307:Generated_Source\PSoC5/UART.c ****         }
1308:Generated_Source\PSoC5/UART.c ****         else if((size & UART_TX_STS_FIFO_EMPTY) != 0u)
 880              		.loc 1 1308 0
 881 000c 13F0020F 		tst	r3, #2
 882 0010 03D0     		beq	.L97
1309:Generated_Source\PSoC5/UART.c ****         {
1310:Generated_Source\PSoC5/UART.c ****             size = 0u;
 883              		.loc 1 1310 0
 884 0012 0020     		movs	r0, #0
 885 0014 7047     		bx	lr
 886              	.L96:
1306:Generated_Source\PSoC5/UART.c ****         }
 887              		.loc 1 1306 0
 888 0016 0420     		movs	r0, #4
 889 0018 7047     		bx	lr
 890              	.L97:
1311:Generated_Source\PSoC5/UART.c ****         }
1312:Generated_Source\PSoC5/UART.c ****         else
1313:Generated_Source\PSoC5/UART.c ****         {
1314:Generated_Source\PSoC5/UART.c ****             /* We only know there is data in the fifo. */
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 40


1315:Generated_Source\PSoC5/UART.c ****             size = 1u;
 891              		.loc 1 1315 0
 892 001a 0120     		movs	r0, #1
 893              	.LVL62:
1316:Generated_Source\PSoC5/UART.c ****         }
1317:Generated_Source\PSoC5/UART.c **** 
1318:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/UART.c **** 
1320:Generated_Source\PSoC5/UART.c ****     return(size);
1321:Generated_Source\PSoC5/UART.c ****     }
 894              		.loc 1 1321 0
 895 001c 7047     		bx	lr
 896              	.L99:
 897 001e 00BF     		.align	2
 898              	.L98:
 899 0020 6B650040 		.word	1073767787
 900              		.cfi_endproc
 901              	.LFE23:
 902              		.size	UART_GetTxBufferSize, .-UART_GetTxBufferSize
 903              		.section	.text.UART_ClearTxBuffer,"ax",%progbits
 904              		.align	2
 905              		.global	UART_ClearTxBuffer
 906              		.thumb
 907              		.thumb_func
 908              		.type	UART_ClearTxBuffer, %function
 909              	UART_ClearTxBuffer:
 910              	.LFB24:
1322:Generated_Source\PSoC5/UART.c **** 
1323:Generated_Source\PSoC5/UART.c **** 
1324:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearTxBuffer
1326:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/UART.c ****     *
1328:Generated_Source\PSoC5/UART.c ****     * Summary:
1329:Generated_Source\PSoC5/UART.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/UART.c ****     *
1331:Generated_Source\PSoC5/UART.c ****     * Parameters:
1332:Generated_Source\PSoC5/UART.c ****     *  None.
1333:Generated_Source\PSoC5/UART.c ****     *
1334:Generated_Source\PSoC5/UART.c ****     * Return:
1335:Generated_Source\PSoC5/UART.c ****     *  None.
1336:Generated_Source\PSoC5/UART.c ****     *
1337:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1338:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/UART.c ****     *
1341:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1342:Generated_Source\PSoC5/UART.c ****     *  No.
1343:Generated_Source\PSoC5/UART.c ****     *
1344:Generated_Source\PSoC5/UART.c ****     * Theory:
1345:Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/UART.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/UART.c ****     *
1349:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1350:Generated_Source\PSoC5/UART.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/UART.c ****     *  transmitting finishes transmitting.
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 41


1352:Generated_Source\PSoC5/UART.c ****     *
1353:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/UART.c ****     void UART_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/UART.c ****     {
 911              		.loc 1 1355 0
 912              		.cfi_startproc
 913              		@ args = 0, pretend = 0, frame = 0
 914              		@ frame_needed = 0, uses_anonymous_args = 0
 915 0000 08B5     		push	{r3, lr}
 916              		.cfi_def_cfa_offset 8
 917              		.cfi_offset 3, -8
 918              		.cfi_offset 14, -4
1356:Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/UART.c **** 
1358:Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 919              		.loc 1 1358 0
 920 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 921              	.LVL63:
1359:Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG |= (uint8)  UART_TX_FIFO_CLR;
 922              		.loc 1 1360 0
 923 0006 064B     		ldr	r3, .L102
 924 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 925 000a 42F00102 		orr	r2, r2, #1
 926 000e 1A70     		strb	r2, [r3]
1361:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG &= (uint8) ~UART_TX_FIFO_CLR;
 927              		.loc 1 1361 0
 928 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 929 0012 02F0FE02 		and	r2, r2, #254
 930 0016 1A70     		strb	r2, [r3]
1362:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 931              		.loc 1 1362 0
 932 0018 FFF7FEFF 		bl	CyExitCriticalSection
 933              	.LVL64:
 934 001c 08BD     		pop	{r3, pc}
 935              	.L103:
 936 001e 00BF     		.align	2
 937              	.L102:
 938 0020 98650040 		.word	1073767832
 939              		.cfi_endproc
 940              	.LFE24:
 941              		.size	UART_ClearTxBuffer, .-UART_ClearTxBuffer
 942              		.section	.text.UART_SendBreak,"ax",%progbits
 943              		.align	2
 944              		.global	UART_SendBreak
 945              		.thumb
 946              		.thumb_func
 947              		.type	UART_SendBreak, %function
 948              	UART_SendBreak:
 949              	.LFB25:
1363:Generated_Source\PSoC5/UART.c **** 
1364:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/UART.c **** 
1366:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
1368:Generated_Source\PSoC5/UART.c **** 
1369:Generated_Source\PSoC5/UART.c ****         UART_txBufferRead = 0u;
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 42


1370:Generated_Source\PSoC5/UART.c ****         UART_txBufferWrite = 0u;
1371:Generated_Source\PSoC5/UART.c **** 
1372:Generated_Source\PSoC5/UART.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
1374:Generated_Source\PSoC5/UART.c **** 
1375:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/UART.c ****     }
1377:Generated_Source\PSoC5/UART.c **** 
1378:Generated_Source\PSoC5/UART.c **** 
1379:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SendBreak
1381:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/UART.c ****     *
1383:Generated_Source\PSoC5/UART.c ****     * Summary:
1384:Generated_Source\PSoC5/UART.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/UART.c ****     *
1386:Generated_Source\PSoC5/UART.c ****     * Parameters:
1387:Generated_Source\PSoC5/UART.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/UART.c ****     *   UART_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/UART.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/UART.c ****     *   UART_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/UART.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/UART.c ****     *   UART_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/UART.c ****     *       then return.
1394:Generated_Source\PSoC5/UART.c ****     *   UART_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/UART.c ****     *      UART_SEND_BREAK and UART_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/UART.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/UART.c ****     *
1398:Generated_Source\PSoC5/UART.c ****     * Return:
1399:Generated_Source\PSoC5/UART.c ****     *  None.
1400:Generated_Source\PSoC5/UART.c ****     *
1401:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1402:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/UART.c ****     *     initialized.
1404:Generated_Source\PSoC5/UART.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/UART.c ****     *
1406:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1407:Generated_Source\PSoC5/UART.c ****     *  No.
1408:Generated_Source\PSoC5/UART.c ****     *
1409:Generated_Source\PSoC5/UART.c ****     * Theory:
1410:Generated_Source\PSoC5/UART.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/UART.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/UART.c ****     *  operation.
1413:Generated_Source\PSoC5/UART.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/UART.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/UART.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/UART.c ****     *     complete.
1417:Generated_Source\PSoC5/UART.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/UART.c ****     *     operation
1419:Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/UART.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/UART.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/UART.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/UART.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 43


1427:Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/UART.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/UART.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/UART.c ****     *
1432:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1433:Generated_Source\PSoC5/UART.c ****     *  The UART_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/UART.c ****     *  break signal.
1435:Generated_Source\PSoC5/UART.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/UART.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/UART.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/UART.c ****     *
1439:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/UART.c ****     void UART_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/UART.c ****     {
 950              		.loc 1 1441 0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 0
 953              		@ frame_needed = 0, uses_anonymous_args = 0
 954              		@ link register save eliminated.
 955              	.LVL65:
1442:Generated_Source\PSoC5/UART.c **** 
1443:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 956              		.loc 1 1444 0
 957 0000 134B     		ldr	r3, .L111
 958 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 959 0004 13B3     		cbz	r3, .L104
 960              	.LBB2:
1445:Generated_Source\PSoC5/UART.c ****         {
1446:Generated_Source\PSoC5/UART.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/UART.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/UART.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/UART.c **** 
1450:Generated_Source\PSoC5/UART.c ****         #if(UART_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/UART.c **** 
1452:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
1453:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/UART.c ****             {
1455:Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() |
1457:Generated_Source\PSoC5/UART.c ****                                                       UART_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/UART.c **** 
1461:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/UART.c ****                 {
1463:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1464:Generated_Source\PSoC5/UART.c ****                 }
1465:Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/UART.c ****             }
1467:Generated_Source\PSoC5/UART.c **** 
1468:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/UART.c ****             {
1471:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/UART.c ****                 {
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 44


1473:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1474:Generated_Source\PSoC5/UART.c ****                 }
1475:Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/UART.c ****             }
1477:Generated_Source\PSoC5/UART.c **** 
1478:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
1480:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/UART.c ****             {
1482:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1483:Generated_Source\PSoC5/UART.c ****                                               (uint8)~UART_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/UART.c ****             }
1485:Generated_Source\PSoC5/UART.c **** 
1486:Generated_Source\PSoC5/UART.c ****         #else /* UART_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/UART.c **** 
1488:Generated_Source\PSoC5/UART.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/UART.c **** 
1490:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
 961              		.loc 1 1490 0
 962 0006 08B1     		cbz	r0, .L106
 963              		.loc 1 1490 0 is_stmt 0 discriminator 1
 964 0008 0328     		cmp	r0, #3
 965 000a 0ED1     		bne	.L107
 966              	.L106:
1491:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/UART.c ****             {
1493:Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/UART.c ****                 #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/UART.c ****                                     (UART_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/UART.c ****                     UART_WriteControlRegister(UART_ReadControlRegister() |
1497:Generated_Source\PSoC5/UART.c ****                                                           UART_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_PARITY_TYPE != UART__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/UART.c **** 
1500:Generated_Source\PSoC5/UART.c ****                 #if(UART_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCLKTX_COMPLETE_REG;
 967              		.loc 1 1501 0 is_stmt 1
 968 000c 114B     		ldr	r3, .L111+4
 969 000e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 970 0010 0F4A     		ldr	r2, .L111
 971 0012 5170     		strb	r1, [r2, #1]
1502:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCLKTX_COMPLETE_REG = UART_TXBITCTR_BREAKBITS;
 972              		.loc 1 1502 0
 973 0014 6722     		movs	r2, #103
 974 0016 1A70     		strb	r2, [r3]
1503:Generated_Source\PSoC5/UART.c ****                 #else
1504:Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCTR_PERIOD_REG = UART_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/UART.c **** 
1508:Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
 975              		.loc 1 1509 0
 976 0018 0022     		movs	r2, #0
 977 001a 03F20F13 		addw	r3, r3, #271
 978 001e 1A70     		strb	r2, [r3]
 979              	.L108:
1510:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 45


1511:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/UART.c ****                 {
1513:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 980              		.loc 1 1513 0 discriminator 1
 981 0020 0D4B     		ldr	r3, .L111+8
 982 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 983              	.LVL66:
1514:Generated_Source\PSoC5/UART.c ****                 }
1515:Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
 984              		.loc 1 1515 0 discriminator 1
 985 0024 13F0020F 		tst	r3, #2
 986 0028 FAD1     		bne	.L108
 987              	.LVL67:
 988              	.L107:
1516:Generated_Source\PSoC5/UART.c ****             }
1517:Generated_Source\PSoC5/UART.c **** 
1518:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 989              		.loc 1 1518 0
 990 002a 0128     		cmp	r0, #1
 991 002c 01D0     		beq	.L109
 992              		.loc 1 1518 0 is_stmt 0 discriminator 1
 993 002e 0328     		cmp	r0, #3
 994 0030 04D1     		bne	.L110
 995              	.L109:
1519:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/UART.c ****             {
1521:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/UART.c ****                 {
1523:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 996              		.loc 1 1523 0 is_stmt 1 discriminator 1
 997 0032 094B     		ldr	r3, .L111+8
 998 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 999              	.LVL68:
1524:Generated_Source\PSoC5/UART.c ****                 }
1525:Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
 1000              		.loc 1 1525 0 discriminator 1
 1001 0036 13F0010F 		tst	r3, #1
 1002 003a FAD0     		beq	.L109
 1003              	.LVL69:
 1004              	.L110:
1526:Generated_Source\PSoC5/UART.c ****             }
1527:Generated_Source\PSoC5/UART.c **** 
1528:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1529:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
 1005              		.loc 1 1529 0
 1006 003c 0138     		subs	r0, r0, #1
 1007              	.LVL70:
 1008 003e C0B2     		uxtb	r0, r0
1528:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
 1009              		.loc 1 1528 0
 1010 0040 0228     		cmp	r0, #2
 1011 0042 03D8     		bhi	.L104
1530:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/UART.c ****             {
1532:Generated_Source\PSoC5/UART.c **** 
1533:Generated_Source\PSoC5/UART.c ****             #if(UART_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/UART.c ****                 UART_TXBITCLKTX_COMPLETE_REG = txPeriod;
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 46


 1012              		.loc 1 1534 0
 1013 0044 024B     		ldr	r3, .L111
 1014 0046 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1015 0048 024B     		ldr	r3, .L111+4
 1016 004a 1A70     		strb	r2, [r3]
 1017              	.L104:
 1018 004c 7047     		bx	lr
 1019              	.L112:
 1020 004e 00BF     		.align	2
 1021              	.L111:
 1022 0050 00000000 		.word	.LANCHOR0
 1023 0054 39640040 		.word	1073767481
 1024 0058 6B650040 		.word	1073767787
 1025              	.LBE2:
 1026              		.cfi_endproc
 1027              	.LFE25:
 1028              		.size	UART_SendBreak, .-UART_SendBreak
 1029              		.section	.text.UART_SetTxAddressMode,"ax",%progbits
 1030              		.align	2
 1031              		.global	UART_SetTxAddressMode
 1032              		.thumb
 1033              		.thumb_func
 1034              		.type	UART_SetTxAddressMode, %function
 1035              	UART_SetTxAddressMode:
 1036              	.LFB26:
1535:Generated_Source\PSoC5/UART.c ****             #else
1536:Generated_Source\PSoC5/UART.c ****                 UART_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/UART.c **** 
1539:Generated_Source\PSoC5/UART.c ****             #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/UART.c ****                  (UART_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1542:Generated_Source\PSoC5/UART.c ****                                                       (uint8) ~UART_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/UART.c ****             }
1545:Generated_Source\PSoC5/UART.c ****         #endif    /* End UART_HD_ENABLED */
1546:Generated_Source\PSoC5/UART.c ****         }
1547:Generated_Source\PSoC5/UART.c ****     }
1548:Generated_Source\PSoC5/UART.c **** 
1549:Generated_Source\PSoC5/UART.c **** 
1550:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxAddressMode
1552:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/UART.c ****     *
1554:Generated_Source\PSoC5/UART.c ****     * Summary:
1555:Generated_Source\PSoC5/UART.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/UART.c ****     *
1557:Generated_Source\PSoC5/UART.c ****     * Parameters:
1558:Generated_Source\PSoC5/UART.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/UART.c ****     *       UART_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/UART.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/UART.c ****     *       UART_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/UART.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/UART.c ****     *
1564:Generated_Source\PSoC5/UART.c ****     * Return:
1565:Generated_Source\PSoC5/UART.c ****     *  None.
1566:Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 47


1567:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1568:Generated_Source\PSoC5/UART.c ****     *  This function sets and clears UART_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/UART.c ****     *  register.
1570:Generated_Source\PSoC5/UART.c ****     *
1571:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/UART.c ****     void UART_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/UART.c ****     {
 1037              		.loc 1 1573 0
 1038              		.cfi_startproc
 1039              		@ args = 0, pretend = 0, frame = 0
 1040              		@ frame_needed = 0, uses_anonymous_args = 0
 1041              	.LVL71:
 1042 0000 08B5     		push	{r3, lr}
 1043              		.cfi_def_cfa_offset 8
 1044              		.cfi_offset 3, -8
 1045              		.cfi_offset 14, -4
1574:Generated_Source\PSoC5/UART.c ****         /* Mark/Space sending enable */
1575:Generated_Source\PSoC5/UART.c ****         if(addressMode != 0u)
 1046              		.loc 1 1575 0
 1047 0002 38B1     		cbz	r0, .L114
1576:Generated_Source\PSoC5/UART.c ****         {
1577:Generated_Source\PSoC5/UART.c ****         #if( UART_CONTROL_REG_REMOVED == 0u )
1578:Generated_Source\PSoC5/UART.c ****             UART_WriteControlRegister(UART_ReadControlRegister() |
 1048              		.loc 1 1578 0
 1049 0004 FFF7FEFF 		bl	UART_ReadControlRegister
 1050              	.LVL72:
 1051 0008 40F00400 		orr	r0, r0, #4
 1052 000c C0B2     		uxtb	r0, r0
 1053 000e FFF7FEFF 		bl	UART_WriteControlRegister
 1054              	.LVL73:
 1055 0012 08BD     		pop	{r3, pc}
 1056              	.LVL74:
 1057              	.L114:
1579:Generated_Source\PSoC5/UART.c ****                                                   UART_CTRL_MARK);
1580:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_CONTROL_REG_REMOVED == 0u */
1581:Generated_Source\PSoC5/UART.c ****         }
1582:Generated_Source\PSoC5/UART.c ****         else
1583:Generated_Source\PSoC5/UART.c ****         {
1584:Generated_Source\PSoC5/UART.c ****         #if( UART_CONTROL_REG_REMOVED == 0u )
1585:Generated_Source\PSoC5/UART.c ****             UART_WriteControlRegister(UART_ReadControlRegister() &
 1058              		.loc 1 1585 0
 1059 0014 FFF7FEFF 		bl	UART_ReadControlRegister
 1060              	.LVL75:
 1061 0018 00F0FB00 		and	r0, r0, #251
 1062 001c FFF7FEFF 		bl	UART_WriteControlRegister
 1063              	.LVL76:
 1064 0020 08BD     		pop	{r3, pc}
 1065              		.cfi_endproc
 1066              	.LFE26:
 1067              		.size	UART_SetTxAddressMode, .-UART_SetTxAddressMode
 1068              		.global	UART_initVar
 1069 0022 00BF     		.bss
 1070              		.set	.LANCHOR0,. + 0
 1071              		.type	UART_initVar, %object
 1072              		.size	UART_initVar, 1
 1073              	UART_initVar:
 1074 0000 00       		.space	1
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 48


 1075              		.type	txPeriod.4991, %object
 1076              		.size	txPeriod.4991, 1
 1077              	txPeriod.4991:
 1078 0001 00       		.space	1
 1079              		.text
 1080              	.Letext0:
 1081              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1082              		.file 3 "Generated_Source\\PSoC5\\UART_IntClock.h"
 1083              		.file 4 "Generated_Source\\PSoC5\\CyLib.h"
 1084              		.section	.debug_info,"",%progbits
 1085              	.Ldebug_info0:
 1086 0000 6F060000 		.4byte	0x66f
 1087 0004 0400     		.2byte	0x4
 1088 0006 00000000 		.4byte	.Ldebug_abbrev0
 1089 000a 04       		.byte	0x4
 1090 000b 01       		.uleb128 0x1
 1091 000c AD030000 		.4byte	.LASF63
 1092 0010 01       		.byte	0x1
 1093 0011 8E020000 		.4byte	.LASF64
 1094 0015 36020000 		.4byte	.LASF65
 1095 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1096 001d 00000000 		.4byte	0
 1097 0021 00000000 		.4byte	.Ldebug_line0
 1098 0025 02       		.uleb128 0x2
 1099 0026 01       		.byte	0x1
 1100 0027 06       		.byte	0x6
 1101 0028 77000000 		.4byte	.LASF0
 1102 002c 02       		.uleb128 0x2
 1103 002d 01       		.byte	0x1
 1104 002e 08       		.byte	0x8
 1105 002f DC020000 		.4byte	.LASF1
 1106 0033 02       		.uleb128 0x2
 1107 0034 02       		.byte	0x2
 1108 0035 05       		.byte	0x5
 1109 0036 FB020000 		.4byte	.LASF2
 1110 003a 02       		.uleb128 0x2
 1111 003b 02       		.byte	0x2
 1112 003c 07       		.byte	0x7
 1113 003d 74010000 		.4byte	.LASF3
 1114 0041 02       		.uleb128 0x2
 1115 0042 04       		.byte	0x4
 1116 0043 05       		.byte	0x5
 1117 0044 8C000000 		.4byte	.LASF4
 1118 0048 02       		.uleb128 0x2
 1119 0049 04       		.byte	0x4
 1120 004a 07       		.byte	0x7
 1121 004b 38010000 		.4byte	.LASF5
 1122 004f 02       		.uleb128 0x2
 1123 0050 08       		.byte	0x8
 1124 0051 05       		.byte	0x5
 1125 0052 69000000 		.4byte	.LASF6
 1126 0056 02       		.uleb128 0x2
 1127 0057 08       		.byte	0x8
 1128 0058 07       		.byte	0x7
 1129 0059 2F000000 		.4byte	.LASF7
 1130 005d 03       		.uleb128 0x3
 1131 005e 04       		.byte	0x4
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 49


 1132 005f 05       		.byte	0x5
 1133 0060 696E7400 		.ascii	"int\000"
 1134 0064 02       		.uleb128 0x2
 1135 0065 04       		.byte	0x4
 1136 0066 07       		.byte	0x7
 1137 0067 0B010000 		.4byte	.LASF8
 1138 006b 04       		.uleb128 0x4
 1139 006c B2000000 		.4byte	.LASF9
 1140 0070 02       		.byte	0x2
 1141 0071 9201     		.2byte	0x192
 1142 0073 2C000000 		.4byte	0x2c
 1143 0077 04       		.uleb128 0x4
 1144 0078 00000000 		.4byte	.LASF10
 1145 007c 02       		.byte	0x2
 1146 007d 9301     		.2byte	0x193
 1147 007f 3A000000 		.4byte	0x3a
 1148 0083 02       		.uleb128 0x2
 1149 0084 04       		.byte	0x4
 1150 0085 04       		.byte	0x4
 1151 0086 45040000 		.4byte	.LASF11
 1152 008a 02       		.uleb128 0x2
 1153 008b 08       		.byte	0x8
 1154 008c 04       		.byte	0x4
 1155 008d D1000000 		.4byte	.LASF12
 1156 0091 04       		.uleb128 0x4
 1157 0092 48030000 		.4byte	.LASF13
 1158 0096 02       		.byte	0x2
 1159 0097 A301     		.2byte	0x1a3
 1160 0099 9D000000 		.4byte	0x9d
 1161 009d 02       		.uleb128 0x2
 1162 009e 01       		.byte	0x1
 1163 009f 08       		.byte	0x8
 1164 00a0 43030000 		.4byte	.LASF14
 1165 00a4 04       		.uleb128 0x4
 1166 00a5 C1020000 		.4byte	.LASF15
 1167 00a9 02       		.byte	0x2
 1168 00aa 3C02     		.2byte	0x23c
 1169 00ac B0000000 		.4byte	0xb0
 1170 00b0 05       		.uleb128 0x5
 1171 00b1 6B000000 		.4byte	0x6b
 1172 00b5 02       		.uleb128 0x2
 1173 00b6 04       		.byte	0x4
 1174 00b7 07       		.byte	0x7
 1175 00b8 E3010000 		.4byte	.LASF16
 1176 00bc 06       		.uleb128 0x6
 1177 00bd 25030000 		.4byte	.LASF17
 1178 00c1 01       		.byte	0x1
 1179 00c2 B7       		.byte	0xb7
 1180 00c3 00000000 		.4byte	.LFB2
 1181 00c7 3C000000 		.4byte	.LFE2-.LFB2
 1182 00cb 01       		.uleb128 0x1
 1183 00cc 9C       		.byte	0x9c
 1184 00cd 03010000 		.4byte	0x103
 1185 00d1 07       		.uleb128 0x7
 1186 00d2 73030000 		.4byte	.LASF19
 1187 00d6 01       		.byte	0x1
 1188 00d7 B9       		.byte	0xb9
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 50


 1189 00d8 6B000000 		.4byte	0x6b
 1190 00dc 00000000 		.4byte	.LLST0
 1191 00e0 08       		.uleb128 0x8
 1192 00e1 06000000 		.4byte	.LVL0
 1193 00e5 48060000 		.4byte	0x648
 1194 00e9 08       		.uleb128 0x8
 1195 00ea 2E000000 		.4byte	.LVL2
 1196 00ee 53060000 		.4byte	0x653
 1197 00f2 09       		.uleb128 0x9
 1198 00f3 34000000 		.4byte	.LVL3
 1199 00f7 5A060000 		.4byte	0x65a
 1200 00fb 0A       		.uleb128 0xa
 1201 00fc 01       		.uleb128 0x1
 1202 00fd 50       		.byte	0x50
 1203 00fe 02       		.uleb128 0x2
 1204 00ff 74       		.byte	0x74
 1205 0100 00       		.sleb128 0
 1206 0101 00       		.byte	0
 1207 0102 00       		.byte	0
 1208 0103 06       		.uleb128 0x6
 1209 0104 3B040000 		.4byte	.LASF18
 1210 0108 01       		.byte	0x1
 1211 0109 F0       		.byte	0xf0
 1212 010a 00000000 		.4byte	.LFB3
 1213 010e 3C000000 		.4byte	.LFE3-.LFB3
 1214 0112 01       		.uleb128 0x1
 1215 0113 9C       		.byte	0x9c
 1216 0114 4A010000 		.4byte	0x14a
 1217 0118 07       		.uleb128 0x7
 1218 0119 73030000 		.4byte	.LASF19
 1219 011d 01       		.byte	0x1
 1220 011e F2       		.byte	0xf2
 1221 011f 6B000000 		.4byte	0x6b
 1222 0123 13000000 		.4byte	.LLST1
 1223 0127 08       		.uleb128 0x8
 1224 0128 06000000 		.4byte	.LVL5
 1225 012c 48060000 		.4byte	0x648
 1226 0130 08       		.uleb128 0x8
 1227 0131 16000000 		.4byte	.LVL7
 1228 0135 6B060000 		.4byte	0x66b
 1229 0139 09       		.uleb128 0x9
 1230 013a 32000000 		.4byte	.LVL8
 1231 013e 5A060000 		.4byte	0x65a
 1232 0142 0A       		.uleb128 0xa
 1233 0143 01       		.uleb128 0x1
 1234 0144 50       		.byte	0x50
 1235 0145 02       		.uleb128 0x2
 1236 0146 74       		.byte	0x74
 1237 0147 00       		.sleb128 0
 1238 0148 00       		.byte	0
 1239 0149 00       		.byte	0
 1240 014a 0B       		.uleb128 0xb
 1241 014b B8000000 		.4byte	.LASF45
 1242 014f 01       		.byte	0x1
 1243 0150 2701     		.2byte	0x127
 1244 0152 6B000000 		.4byte	0x6b
 1245 0156 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 51


 1246 015a 0C000000 		.4byte	.LFE4-.LFB4
 1247 015e 01       		.uleb128 0x1
 1248 015f 9C       		.byte	0x9c
 1249 0160 0C       		.uleb128 0xc
 1250 0161 5A040000 		.4byte	.LASF20
 1251 0165 01       		.byte	0x1
 1252 0166 3F01     		.2byte	0x13f
 1253 0168 00000000 		.4byte	.LFB5
 1254 016c 0C000000 		.4byte	.LFE5-.LFB5
 1255 0170 01       		.uleb128 0x1
 1256 0171 9C       		.byte	0x9c
 1257 0172 85010000 		.4byte	0x185
 1258 0176 0D       		.uleb128 0xd
 1259 0177 E4000000 		.4byte	.LASF22
 1260 017b 01       		.byte	0x1
 1261 017c 3F01     		.2byte	0x13f
 1262 017e 6B000000 		.4byte	0x6b
 1263 0182 01       		.uleb128 0x1
 1264 0183 50       		.byte	0x50
 1265 0184 00       		.byte	0
 1266 0185 0C       		.uleb128 0xc
 1267 0186 4E030000 		.4byte	.LASF21
 1268 018a 01       		.byte	0x1
 1269 018b 6701     		.2byte	0x167
 1270 018d 00000000 		.4byte	.LFB6
 1271 0191 0C000000 		.4byte	.LFE6-.LFB6
 1272 0195 01       		.uleb128 0x1
 1273 0196 9C       		.byte	0x9c
 1274 0197 AA010000 		.4byte	0x1aa
 1275 019b 0D       		.uleb128 0xd
 1276 019c 90010000 		.4byte	.LASF23
 1277 01a0 01       		.byte	0x1
 1278 01a1 6701     		.2byte	0x167
 1279 01a3 6B000000 		.4byte	0x6b
 1280 01a7 01       		.uleb128 0x1
 1281 01a8 50       		.byte	0x50
 1282 01a9 00       		.byte	0
 1283 01aa 0E       		.uleb128 0xe
 1284 01ab A2000000 		.4byte	.LASF25
 1285 01af 01       		.byte	0x1
 1286 01b0 8801     		.2byte	0x188
 1287 01b2 6B000000 		.4byte	0x6b
 1288 01b6 00000000 		.4byte	.LFB7
 1289 01ba 0C000000 		.4byte	.LFE7-.LFB7
 1290 01be 01       		.uleb128 0x1
 1291 01bf 9C       		.byte	0x9c
 1292 01c0 D3010000 		.4byte	0x1d3
 1293 01c4 0F       		.uleb128 0xf
 1294 01c5 1E030000 		.4byte	.LASF24
 1295 01c9 01       		.byte	0x1
 1296 01ca 8A01     		.2byte	0x18a
 1297 01cc 6B000000 		.4byte	0x6b
 1298 01d0 01       		.uleb128 0x1
 1299 01d1 50       		.byte	0x50
 1300 01d2 00       		.byte	0
 1301 01d3 0E       		.uleb128 0xe
 1302 01d4 31030000 		.4byte	.LASF26
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 52


 1303 01d8 01       		.byte	0x1
 1304 01d9 E501     		.2byte	0x1e5
 1305 01db 6B000000 		.4byte	0x6b
 1306 01df 00000000 		.4byte	.LFB8
 1307 01e3 10000000 		.4byte	.LFE8-.LFB8
 1308 01e7 01       		.uleb128 0x1
 1309 01e8 9C       		.byte	0x9c
 1310 01e9 FE010000 		.4byte	0x1fe
 1311 01ed 10       		.uleb128 0x10
 1312 01ee A6030000 		.4byte	.LASF27
 1313 01f2 01       		.byte	0x1
 1314 01f3 E701     		.2byte	0x1e7
 1315 01f5 6B000000 		.4byte	0x6b
 1316 01f9 26000000 		.4byte	.LLST2
 1317 01fd 00       		.byte	0
 1318 01fe 0E       		.uleb128 0xe
 1319 01ff 66030000 		.4byte	.LASF28
 1320 0203 01       		.byte	0x1
 1321 0204 1402     		.2byte	0x214
 1322 0206 6B000000 		.4byte	0x6b
 1323 020a 00000000 		.4byte	.LFB9
 1324 020e 2C000000 		.4byte	.LFE9-.LFB9
 1325 0212 01       		.uleb128 0x1
 1326 0213 9C       		.byte	0x9c
 1327 0214 37020000 		.4byte	0x237
 1328 0218 10       		.uleb128 0x10
 1329 0219 1E030000 		.4byte	.LASF24
 1330 021d 01       		.byte	0x1
 1331 021e 1602     		.2byte	0x216
 1332 0220 6B000000 		.4byte	0x6b
 1333 0224 3E000000 		.4byte	.LLST3
 1334 0228 0F       		.uleb128 0xf
 1335 0229 1A020000 		.4byte	.LASF29
 1336 022d 01       		.byte	0x1
 1337 022e 1702     		.2byte	0x217
 1338 0230 6B000000 		.4byte	0x6b
 1339 0234 01       		.uleb128 0x1
 1340 0235 53       		.byte	0x53
 1341 0236 00       		.byte	0
 1342 0237 0E       		.uleb128 0xe
 1343 0238 FE000000 		.4byte	.LASF30
 1344 023c 01       		.byte	0x1
 1345 023d 7A02     		.2byte	0x27a
 1346 023f 77000000 		.4byte	0x77
 1347 0243 00000000 		.4byte	.LFB10
 1348 0247 12000000 		.4byte	.LFE10-.LFB10
 1349 024b 01       		.uleb128 0x1
 1350 024c 9C       		.byte	0x9c
 1351 024d 64020000 		.4byte	0x264
 1352 0251 08       		.uleb128 0x8
 1353 0252 06000000 		.4byte	.LVL21
 1354 0256 D3010000 		.4byte	0x1d3
 1355 025a 08       		.uleb128 0x8
 1356 025b 0C000000 		.4byte	.LVL22
 1357 025f AA010000 		.4byte	0x1aa
 1358 0263 00       		.byte	0
 1359 0264 0E       		.uleb128 0xe
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 53


 1360 0265 91030000 		.4byte	.LASF31
 1361 0269 01       		.byte	0x1
 1362 026a AB02     		.2byte	0x2ab
 1363 026c 6B000000 		.4byte	0x6b
 1364 0270 00000000 		.4byte	.LFB11
 1365 0274 18000000 		.4byte	.LFE11-.LFB11
 1366 0278 01       		.uleb128 0x1
 1367 0279 9C       		.byte	0x9c
 1368 027a 8D020000 		.4byte	0x28d
 1369 027e 0F       		.uleb128 0xf
 1370 027f 6F010000 		.4byte	.LASF32
 1371 0283 01       		.byte	0x1
 1372 0284 AE02     		.2byte	0x2ae
 1373 0286 6B000000 		.4byte	0x6b
 1374 028a 01       		.uleb128 0x1
 1375 028b 50       		.byte	0x50
 1376 028c 00       		.byte	0
 1377 028d 0C       		.uleb128 0xc
 1378 028e 74040000 		.4byte	.LASF33
 1379 0292 01       		.byte	0x1
 1380 0293 F502     		.2byte	0x2f5
 1381 0295 00000000 		.4byte	.LFB12
 1382 0299 24000000 		.4byte	.LFE12-.LFB12
 1383 029d 01       		.uleb128 0x1
 1384 029e 9C       		.byte	0x9c
 1385 029f C6020000 		.4byte	0x2c6
 1386 02a3 10       		.uleb128 0x10
 1387 02a4 73030000 		.4byte	.LASF19
 1388 02a8 01       		.byte	0x1
 1389 02a9 F702     		.2byte	0x2f7
 1390 02ab 6B000000 		.4byte	0x6b
 1391 02af 74000000 		.4byte	.LLST4
 1392 02b3 08       		.uleb128 0x8
 1393 02b4 06000000 		.4byte	.LVL24
 1394 02b8 48060000 		.4byte	0x648
 1395 02bc 08       		.uleb128 0x8
 1396 02bd 1C000000 		.4byte	.LVL25
 1397 02c1 5A060000 		.4byte	0x65a
 1398 02c5 00       		.byte	0
 1399 02c6 0C       		.uleb128 0xc
 1400 02c7 C6020000 		.4byte	.LASF34
 1401 02cb 01       		.byte	0x1
 1402 02cc 2D03     		.2byte	0x32d
 1403 02ce 00000000 		.4byte	.LFB13
 1404 02d2 18000000 		.4byte	.LFE13-.LFB13
 1405 02d6 01       		.uleb128 0x1
 1406 02d7 9C       		.byte	0x9c
 1407 02d8 FB020000 		.4byte	0x2fb
 1408 02dc 11       		.uleb128 0x11
 1409 02dd D8000000 		.4byte	.LASF35
 1410 02e1 01       		.byte	0x1
 1411 02e2 2D03     		.2byte	0x32d
 1412 02e4 6B000000 		.4byte	0x6b
 1413 02e8 87000000 		.4byte	.LLST5
 1414 02ec 0F       		.uleb128 0xf
 1415 02ed D3010000 		.4byte	.LASF36
 1416 02f1 01       		.byte	0x1
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 54


 1417 02f2 3703     		.2byte	0x337
 1418 02f4 6B000000 		.4byte	0x6b
 1419 02f8 01       		.uleb128 0x1
 1420 02f9 53       		.byte	0x53
 1421 02fa 00       		.byte	0
 1422 02fb 0C       		.uleb128 0xc
 1423 02fc F4010000 		.4byte	.LASF37
 1424 0300 01       		.byte	0x1
 1425 0301 5903     		.2byte	0x359
 1426 0303 00000000 		.4byte	.LFB14
 1427 0307 0C000000 		.4byte	.LFE14-.LFB14
 1428 030b 01       		.uleb128 0x1
 1429 030c 9C       		.byte	0x9c
 1430 030d 20030000 		.4byte	0x320
 1431 0311 0D       		.uleb128 0xd
 1432 0312 EC010000 		.4byte	.LASF38
 1433 0316 01       		.byte	0x1
 1434 0317 5903     		.2byte	0x359
 1435 0319 6B000000 		.4byte	0x6b
 1436 031d 01       		.uleb128 0x1
 1437 031e 50       		.byte	0x50
 1438 031f 00       		.byte	0
 1439 0320 0C       		.uleb128 0xc
 1440 0321 07020000 		.4byte	.LASF39
 1441 0325 01       		.byte	0x1
 1442 0326 6D03     		.2byte	0x36d
 1443 0328 00000000 		.4byte	.LFB15
 1444 032c 0C000000 		.4byte	.LFE15-.LFB15
 1445 0330 01       		.uleb128 0x1
 1446 0331 9C       		.byte	0x9c
 1447 0332 45030000 		.4byte	0x345
 1448 0336 0D       		.uleb128 0xd
 1449 0337 EC010000 		.4byte	.LASF38
 1450 033b 01       		.byte	0x1
 1451 033c 6D03     		.2byte	0x36d
 1452 033e 6B000000 		.4byte	0x6b
 1453 0342 01       		.uleb128 0x1
 1454 0343 50       		.byte	0x50
 1455 0344 00       		.byte	0
 1456 0345 06       		.uleb128 0x6
 1457 0346 EC000000 		.4byte	.LASF40
 1458 034a 01       		.byte	0x1
 1459 034b 6A       		.byte	0x6a
 1460 034c 00000000 		.4byte	.LFB1
 1461 0350 3C000000 		.4byte	.LFE1-.LFB1
 1462 0354 01       		.uleb128 0x1
 1463 0355 9C       		.byte	0x9c
 1464 0356 90030000 		.4byte	0x390
 1465 035a 12       		.uleb128 0x12
 1466 035b 08000000 		.4byte	.LVL32
 1467 035f C6020000 		.4byte	0x2c6
 1468 0363 6D030000 		.4byte	0x36d
 1469 0367 0A       		.uleb128 0xa
 1470 0368 01       		.uleb128 0x1
 1471 0369 50       		.byte	0x50
 1472 036a 01       		.uleb128 0x1
 1473 036b 34       		.byte	0x34
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 55


 1474 036c 00       		.byte	0
 1475 036d 12       		.uleb128 0x12
 1476 036e 0E000000 		.4byte	.LVL33
 1477 0372 FB020000 		.4byte	0x2fb
 1478 0376 80030000 		.4byte	0x380
 1479 037a 0A       		.uleb128 0xa
 1480 037b 01       		.uleb128 0x1
 1481 037c 50       		.byte	0x50
 1482 037d 01       		.uleb128 0x1
 1483 037e 3F       		.byte	0x3f
 1484 037f 00       		.byte	0
 1485 0380 09       		.uleb128 0x9
 1486 0381 14000000 		.4byte	.LVL34
 1487 0385 20030000 		.4byte	0x320
 1488 0389 0A       		.uleb128 0xa
 1489 038a 01       		.uleb128 0x1
 1490 038b 50       		.byte	0x50
 1491 038c 01       		.uleb128 0x1
 1492 038d 30       		.byte	0x30
 1493 038e 00       		.byte	0
 1494 038f 00       		.byte	0
 1495 0390 06       		.uleb128 0x6
 1496 0391 46000000 		.4byte	.LASF41
 1497 0395 01       		.byte	0x1
 1498 0396 4C       		.byte	0x4c
 1499 0397 00000000 		.4byte	.LFB0
 1500 039b 1C000000 		.4byte	.LFE0-.LFB0
 1501 039f 01       		.uleb128 0x1
 1502 03a0 9C       		.byte	0x9c
 1503 03a1 B8030000 		.4byte	0x3b8
 1504 03a5 08       		.uleb128 0x8
 1505 03a6 0C000000 		.4byte	.LVL35
 1506 03aa 45030000 		.4byte	0x345
 1507 03ae 08       		.uleb128 0x8
 1508 03af 16000000 		.4byte	.LVL36
 1509 03b3 BC000000 		.4byte	0xbc
 1510 03b7 00       		.byte	0
 1511 03b8 0C       		.uleb128 0xc
 1512 03b9 51000000 		.4byte	.LASF42
 1513 03bd 01       		.byte	0x1
 1514 03be 8C03     		.2byte	0x38c
 1515 03c0 00000000 		.4byte	.LFB16
 1516 03c4 0C000000 		.4byte	.LFE16-.LFB16
 1517 03c8 01       		.uleb128 0x1
 1518 03c9 9C       		.byte	0x9c
 1519 03ca DD030000 		.4byte	0x3dd
 1520 03ce 0D       		.uleb128 0xd
 1521 03cf 90010000 		.4byte	.LASF23
 1522 03d3 01       		.byte	0x1
 1523 03d4 8C03     		.2byte	0x38c
 1524 03d6 6B000000 		.4byte	0x6b
 1525 03da 01       		.uleb128 0x1
 1526 03db 50       		.byte	0x50
 1527 03dc 00       		.byte	0
 1528 03dd 0C       		.uleb128 0xc
 1529 03de EA020000 		.4byte	.LASF43
 1530 03e2 01       		.byte	0x1
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 56


 1531 03e3 AE03     		.2byte	0x3ae
 1532 03e5 00000000 		.4byte	.LFB17
 1533 03e9 14000000 		.4byte	.LFE17-.LFB17
 1534 03ed 01       		.uleb128 0x1
 1535 03ee 9C       		.byte	0x9c
 1536 03ef 02040000 		.4byte	0x402
 1537 03f3 0D       		.uleb128 0xd
 1538 03f4 1D000000 		.4byte	.LASF44
 1539 03f8 01       		.byte	0x1
 1540 03f9 AE03     		.2byte	0x3ae
 1541 03fb 6B000000 		.4byte	0x6b
 1542 03ff 01       		.uleb128 0x1
 1543 0400 50       		.byte	0x50
 1544 0401 00       		.byte	0
 1545 0402 0B       		.uleb128 0xb
 1546 0403 AD010000 		.4byte	.LASF46
 1547 0407 01       		.byte	0x1
 1548 0408 EB03     		.2byte	0x3eb
 1549 040a 6B000000 		.4byte	0x6b
 1550 040e 00000000 		.4byte	.LFB18
 1551 0412 0C000000 		.4byte	.LFE18-.LFB18
 1552 0416 01       		.uleb128 0x1
 1553 0417 9C       		.byte	0x9c
 1554 0418 0C       		.uleb128 0xc
 1555 0419 95000000 		.4byte	.LASF47
 1556 041d 01       		.byte	0x1
 1557 041e 1104     		.2byte	0x411
 1558 0420 00000000 		.4byte	.LFB19
 1559 0424 18000000 		.4byte	.LFE19-.LFB19
 1560 0428 01       		.uleb128 0x1
 1561 0429 9C       		.byte	0x9c
 1562 042a 3D040000 		.4byte	0x43d
 1563 042e 0D       		.uleb128 0xd
 1564 042f 1D000000 		.4byte	.LASF44
 1565 0433 01       		.byte	0x1
 1566 0434 1104     		.2byte	0x411
 1567 0436 6B000000 		.4byte	0x6b
 1568 043a 01       		.uleb128 0x1
 1569 043b 50       		.byte	0x50
 1570 043c 00       		.byte	0
 1571 043d 0C       		.uleb128 0xc
 1572 043e 4B040000 		.4byte	.LASF48
 1573 0442 01       		.byte	0x1
 1574 0443 7904     		.2byte	0x479
 1575 0445 00000000 		.4byte	.LFB20
 1576 0449 24000000 		.4byte	.LFE20-.LFB20
 1577 044d 01       		.uleb128 0x1
 1578 044e 9C       		.byte	0x9c
 1579 044f 7D040000 		.4byte	0x47d
 1580 0453 11       		.uleb128 0x11
 1581 0454 28000000 		.4byte	.LASF49
 1582 0458 01       		.byte	0x1
 1583 0459 7904     		.2byte	0x479
 1584 045b 7D040000 		.4byte	0x47d
 1585 045f A8000000 		.4byte	.LLST6
 1586 0463 10       		.uleb128 0x10
 1587 0464 87010000 		.4byte	.LASF50
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 57


 1588 0468 01       		.byte	0x1
 1589 0469 7B04     		.2byte	0x47b
 1590 046b 77000000 		.4byte	0x77
 1591 046f EA000000 		.4byte	.LLST7
 1592 0473 08       		.uleb128 0x8
 1593 0474 0E000000 		.4byte	.LVL43
 1594 0478 18040000 		.4byte	0x418
 1595 047c 00       		.byte	0
 1596 047d 13       		.uleb128 0x13
 1597 047e 04       		.byte	0x4
 1598 047f 83040000 		.4byte	0x483
 1599 0483 14       		.uleb128 0x14
 1600 0484 91000000 		.4byte	0x91
 1601 0488 0C       		.uleb128 0xc
 1602 0489 4A010000 		.4byte	.LASF51
 1603 048d 01       		.byte	0x1
 1604 048e A704     		.2byte	0x4a7
 1605 0490 00000000 		.4byte	.LFB21
 1606 0494 28000000 		.4byte	.LFE21-.LFB21
 1607 0498 01       		.uleb128 0x1
 1608 0499 9C       		.byte	0x9c
 1609 049a D8040000 		.4byte	0x4d8
 1610 049e 11       		.uleb128 0x11
 1611 049f 28000000 		.4byte	.LASF49
 1612 04a3 01       		.byte	0x1
 1613 04a4 A704     		.2byte	0x4a7
 1614 04a6 D8040000 		.4byte	0x4d8
 1615 04aa 2B010000 		.4byte	.LLST8
 1616 04ae 11       		.uleb128 0x11
 1617 04af 14030000 		.4byte	.LASF52
 1618 04b3 01       		.byte	0x1
 1619 04b4 A704     		.2byte	0x4a7
 1620 04b6 6B000000 		.4byte	0x6b
 1621 04ba 6D010000 		.4byte	.LLST9
 1622 04be 10       		.uleb128 0x10
 1623 04bf 87010000 		.4byte	.LASF50
 1624 04c3 01       		.byte	0x1
 1625 04c4 AA04     		.2byte	0x4aa
 1626 04c6 6B000000 		.4byte	0x6b
 1627 04ca A7010000 		.4byte	.LLST10
 1628 04ce 08       		.uleb128 0x8
 1629 04cf 0E000000 		.4byte	.LVL51
 1630 04d3 18040000 		.4byte	0x418
 1631 04d7 00       		.byte	0
 1632 04d8 13       		.uleb128 0x13
 1633 04d9 04       		.byte	0x4
 1634 04da DE040000 		.4byte	0x4de
 1635 04de 14       		.uleb128 0x14
 1636 04df 6B000000 		.4byte	0x6b
 1637 04e3 0C       		.uleb128 0xc
 1638 04e4 2B010000 		.4byte	.LASF53
 1639 04e8 01       		.byte	0x1
 1640 04e9 CE04     		.2byte	0x4ce
 1641 04eb 00000000 		.4byte	.LFB22
 1642 04ef 20000000 		.4byte	.LFE22-.LFB22
 1643 04f3 01       		.uleb128 0x1
 1644 04f4 9C       		.byte	0x9c
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 58


 1645 04f5 35050000 		.4byte	0x535
 1646 04f9 11       		.uleb128 0x11
 1647 04fa 1D000000 		.4byte	.LASF44
 1648 04fe 01       		.byte	0x1
 1649 04ff CE04     		.2byte	0x4ce
 1650 0501 6B000000 		.4byte	0x6b
 1651 0505 E8010000 		.4byte	.LLST11
 1652 0509 08       		.uleb128 0x8
 1653 050a 0C000000 		.4byte	.LVL58
 1654 050e 18040000 		.4byte	0x418
 1655 0512 12       		.uleb128 0x12
 1656 0513 12000000 		.4byte	.LVL59
 1657 0517 18040000 		.4byte	0x418
 1658 051b 25050000 		.4byte	0x525
 1659 051f 0A       		.uleb128 0xa
 1660 0520 01       		.uleb128 0x1
 1661 0521 50       		.byte	0x50
 1662 0522 01       		.uleb128 0x1
 1663 0523 3D       		.byte	0x3d
 1664 0524 00       		.byte	0
 1665 0525 09       		.uleb128 0x9
 1666 0526 18000000 		.4byte	.LVL60
 1667 052a 18040000 		.4byte	0x418
 1668 052e 0A       		.uleb128 0xa
 1669 052f 01       		.uleb128 0x1
 1670 0530 50       		.byte	0x50
 1671 0531 01       		.uleb128 0x1
 1672 0532 3A       		.byte	0x3a
 1673 0533 00       		.byte	0
 1674 0534 00       		.byte	0
 1675 0535 0E       		.uleb128 0xe
 1676 0536 AC020000 		.4byte	.LASF54
 1677 053a 01       		.byte	0x1
 1678 053b F904     		.2byte	0x4f9
 1679 053d 6B000000 		.4byte	0x6b
 1680 0541 00000000 		.4byte	.LFB23
 1681 0545 24000000 		.4byte	.LFE23-.LFB23
 1682 0549 01       		.uleb128 0x1
 1683 054a 9C       		.byte	0x9c
 1684 054b 60050000 		.4byte	0x560
 1685 054f 10       		.uleb128 0x10
 1686 0550 6F010000 		.4byte	.LASF32
 1687 0554 01       		.byte	0x1
 1688 0555 FC04     		.2byte	0x4fc
 1689 0557 6B000000 		.4byte	0x6b
 1690 055b 09020000 		.4byte	.LLST12
 1691 055f 00       		.byte	0
 1692 0560 0C       		.uleb128 0xc
 1693 0561 18010000 		.4byte	.LASF55
 1694 0565 01       		.byte	0x1
 1695 0566 4A05     		.2byte	0x54a
 1696 0568 00000000 		.4byte	.LFB24
 1697 056c 24000000 		.4byte	.LFE24-.LFB24
 1698 0570 01       		.uleb128 0x1
 1699 0571 9C       		.byte	0x9c
 1700 0572 99050000 		.4byte	0x599
 1701 0576 10       		.uleb128 0x10
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 59


 1702 0577 73030000 		.4byte	.LASF19
 1703 057b 01       		.byte	0x1
 1704 057c 4C05     		.2byte	0x54c
 1705 057e 6B000000 		.4byte	0x6b
 1706 0582 27020000 		.4byte	.LLST13
 1707 0586 08       		.uleb128 0x8
 1708 0587 06000000 		.4byte	.LVL63
 1709 058b 48060000 		.4byte	0x648
 1710 058f 08       		.uleb128 0x8
 1711 0590 1C000000 		.4byte	.LVL64
 1712 0594 5A060000 		.4byte	0x65a
 1713 0598 00       		.byte	0
 1714 0599 0C       		.uleb128 0xc
 1715 059a 05030000 		.4byte	.LASF56
 1716 059e 01       		.byte	0x1
 1717 059f A005     		.2byte	0x5a0
 1718 05a1 00000000 		.4byte	.LFB25
 1719 05a5 5C000000 		.4byte	.LFE25-.LFB25
 1720 05a9 01       		.uleb128 0x1
 1721 05aa 9C       		.byte	0x9c
 1722 05ab EC050000 		.4byte	0x5ec
 1723 05af 11       		.uleb128 0x11
 1724 05b0 F6000000 		.4byte	.LASF57
 1725 05b4 01       		.byte	0x1
 1726 05b5 A005     		.2byte	0x5a0
 1727 05b7 6B000000 		.4byte	0x6b
 1728 05bb 3A020000 		.4byte	.LLST14
 1729 05bf 15       		.uleb128 0x15
 1730 05c0 06000000 		.4byte	.LBB2
 1731 05c4 56000000 		.4byte	.LBE2-.LBB2
 1732 05c8 10       		.uleb128 0x10
 1733 05c9 DB010000 		.4byte	.LASF58
 1734 05cd 01       		.byte	0x1
 1735 05ce A805     		.2byte	0x5a8
 1736 05d0 6B000000 		.4byte	0x6b
 1737 05d4 5B020000 		.4byte	.LLST15
 1738 05d8 0F       		.uleb128 0xf
 1739 05d9 83000000 		.4byte	.LASF59
 1740 05dd 01       		.byte	0x1
 1741 05de D005     		.2byte	0x5d0
 1742 05e0 6B000000 		.4byte	0x6b
 1743 05e4 05       		.uleb128 0x5
 1744 05e5 03       		.byte	0x3
 1745 05e6 01000000 		.4byte	txPeriod.4991
 1746 05ea 00       		.byte	0
 1747 05eb 00       		.byte	0
 1748 05ec 0C       		.uleb128 0xc
 1749 05ed 97010000 		.4byte	.LASF60
 1750 05f1 01       		.byte	0x1
 1751 05f2 2406     		.2byte	0x624
 1752 05f4 00000000 		.4byte	.LFB26
 1753 05f8 22000000 		.4byte	.LFE26-.LFB26
 1754 05fc 01       		.uleb128 0x1
 1755 05fd 9C       		.byte	0x9c
 1756 05fe 37060000 		.4byte	0x637
 1757 0602 11       		.uleb128 0x11
 1758 0603 D8000000 		.4byte	.LASF35
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 60


 1759 0607 01       		.byte	0x1
 1760 0608 2406     		.2byte	0x624
 1761 060a 6B000000 		.4byte	0x6b
 1762 060e 79020000 		.4byte	.LLST16
 1763 0612 08       		.uleb128 0x8
 1764 0613 08000000 		.4byte	.LVL72
 1765 0617 4A010000 		.4byte	0x14a
 1766 061b 08       		.uleb128 0x8
 1767 061c 12000000 		.4byte	.LVL73
 1768 0620 60010000 		.4byte	0x160
 1769 0624 08       		.uleb128 0x8
 1770 0625 18000000 		.4byte	.LVL75
 1771 0629 4A010000 		.4byte	0x14a
 1772 062d 08       		.uleb128 0x8
 1773 062e 20000000 		.4byte	.LVL76
 1774 0632 60010000 		.4byte	0x160
 1775 0636 00       		.byte	0
 1776 0637 16       		.uleb128 0x16
 1777 0638 84030000 		.4byte	.LASF66
 1778 063c 01       		.byte	0x1
 1779 063d 1B       		.byte	0x1b
 1780 063e 6B000000 		.4byte	0x6b
 1781 0642 05       		.uleb128 0x5
 1782 0643 03       		.byte	0x3
 1783 0644 00000000 		.4byte	UART_initVar
 1784 0648 17       		.uleb128 0x17
 1785 0649 58010000 		.4byte	.LASF67
 1786 064d 04       		.byte	0x4
 1787 064e 7D       		.byte	0x7d
 1788 064f 6B000000 		.4byte	0x6b
 1789 0653 18       		.uleb128 0x18
 1790 0654 BF010000 		.4byte	.LASF61
 1791 0658 03       		.byte	0x3
 1792 0659 27       		.byte	0x27
 1793 065a 19       		.uleb128 0x19
 1794 065b 07000000 		.4byte	.LASF68
 1795 065f 04       		.byte	0x4
 1796 0660 7E       		.byte	0x7e
 1797 0661 6B060000 		.4byte	0x66b
 1798 0665 1A       		.uleb128 0x1a
 1799 0666 6B000000 		.4byte	0x6b
 1800 066a 00       		.byte	0
 1801 066b 18       		.uleb128 0x18
 1802 066c 23020000 		.4byte	.LASF62
 1803 0670 03       		.byte	0x3
 1804 0671 28       		.byte	0x28
 1805 0672 00       		.byte	0
 1806              		.section	.debug_abbrev,"",%progbits
 1807              	.Ldebug_abbrev0:
 1808 0000 01       		.uleb128 0x1
 1809 0001 11       		.uleb128 0x11
 1810 0002 01       		.byte	0x1
 1811 0003 25       		.uleb128 0x25
 1812 0004 0E       		.uleb128 0xe
 1813 0005 13       		.uleb128 0x13
 1814 0006 0B       		.uleb128 0xb
 1815 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 61


 1816 0008 0E       		.uleb128 0xe
 1817 0009 1B       		.uleb128 0x1b
 1818 000a 0E       		.uleb128 0xe
 1819 000b 55       		.uleb128 0x55
 1820 000c 17       		.uleb128 0x17
 1821 000d 11       		.uleb128 0x11
 1822 000e 01       		.uleb128 0x1
 1823 000f 10       		.uleb128 0x10
 1824 0010 17       		.uleb128 0x17
 1825 0011 00       		.byte	0
 1826 0012 00       		.byte	0
 1827 0013 02       		.uleb128 0x2
 1828 0014 24       		.uleb128 0x24
 1829 0015 00       		.byte	0
 1830 0016 0B       		.uleb128 0xb
 1831 0017 0B       		.uleb128 0xb
 1832 0018 3E       		.uleb128 0x3e
 1833 0019 0B       		.uleb128 0xb
 1834 001a 03       		.uleb128 0x3
 1835 001b 0E       		.uleb128 0xe
 1836 001c 00       		.byte	0
 1837 001d 00       		.byte	0
 1838 001e 03       		.uleb128 0x3
 1839 001f 24       		.uleb128 0x24
 1840 0020 00       		.byte	0
 1841 0021 0B       		.uleb128 0xb
 1842 0022 0B       		.uleb128 0xb
 1843 0023 3E       		.uleb128 0x3e
 1844 0024 0B       		.uleb128 0xb
 1845 0025 03       		.uleb128 0x3
 1846 0026 08       		.uleb128 0x8
 1847 0027 00       		.byte	0
 1848 0028 00       		.byte	0
 1849 0029 04       		.uleb128 0x4
 1850 002a 16       		.uleb128 0x16
 1851 002b 00       		.byte	0
 1852 002c 03       		.uleb128 0x3
 1853 002d 0E       		.uleb128 0xe
 1854 002e 3A       		.uleb128 0x3a
 1855 002f 0B       		.uleb128 0xb
 1856 0030 3B       		.uleb128 0x3b
 1857 0031 05       		.uleb128 0x5
 1858 0032 49       		.uleb128 0x49
 1859 0033 13       		.uleb128 0x13
 1860 0034 00       		.byte	0
 1861 0035 00       		.byte	0
 1862 0036 05       		.uleb128 0x5
 1863 0037 35       		.uleb128 0x35
 1864 0038 00       		.byte	0
 1865 0039 49       		.uleb128 0x49
 1866 003a 13       		.uleb128 0x13
 1867 003b 00       		.byte	0
 1868 003c 00       		.byte	0
 1869 003d 06       		.uleb128 0x6
 1870 003e 2E       		.uleb128 0x2e
 1871 003f 01       		.byte	0x1
 1872 0040 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 62


 1873 0041 19       		.uleb128 0x19
 1874 0042 03       		.uleb128 0x3
 1875 0043 0E       		.uleb128 0xe
 1876 0044 3A       		.uleb128 0x3a
 1877 0045 0B       		.uleb128 0xb
 1878 0046 3B       		.uleb128 0x3b
 1879 0047 0B       		.uleb128 0xb
 1880 0048 27       		.uleb128 0x27
 1881 0049 19       		.uleb128 0x19
 1882 004a 11       		.uleb128 0x11
 1883 004b 01       		.uleb128 0x1
 1884 004c 12       		.uleb128 0x12
 1885 004d 06       		.uleb128 0x6
 1886 004e 40       		.uleb128 0x40
 1887 004f 18       		.uleb128 0x18
 1888 0050 9742     		.uleb128 0x2117
 1889 0052 19       		.uleb128 0x19
 1890 0053 01       		.uleb128 0x1
 1891 0054 13       		.uleb128 0x13
 1892 0055 00       		.byte	0
 1893 0056 00       		.byte	0
 1894 0057 07       		.uleb128 0x7
 1895 0058 34       		.uleb128 0x34
 1896 0059 00       		.byte	0
 1897 005a 03       		.uleb128 0x3
 1898 005b 0E       		.uleb128 0xe
 1899 005c 3A       		.uleb128 0x3a
 1900 005d 0B       		.uleb128 0xb
 1901 005e 3B       		.uleb128 0x3b
 1902 005f 0B       		.uleb128 0xb
 1903 0060 49       		.uleb128 0x49
 1904 0061 13       		.uleb128 0x13
 1905 0062 02       		.uleb128 0x2
 1906 0063 17       		.uleb128 0x17
 1907 0064 00       		.byte	0
 1908 0065 00       		.byte	0
 1909 0066 08       		.uleb128 0x8
 1910 0067 898201   		.uleb128 0x4109
 1911 006a 00       		.byte	0
 1912 006b 11       		.uleb128 0x11
 1913 006c 01       		.uleb128 0x1
 1914 006d 31       		.uleb128 0x31
 1915 006e 13       		.uleb128 0x13
 1916 006f 00       		.byte	0
 1917 0070 00       		.byte	0
 1918 0071 09       		.uleb128 0x9
 1919 0072 898201   		.uleb128 0x4109
 1920 0075 01       		.byte	0x1
 1921 0076 11       		.uleb128 0x11
 1922 0077 01       		.uleb128 0x1
 1923 0078 31       		.uleb128 0x31
 1924 0079 13       		.uleb128 0x13
 1925 007a 00       		.byte	0
 1926 007b 00       		.byte	0
 1927 007c 0A       		.uleb128 0xa
 1928 007d 8A8201   		.uleb128 0x410a
 1929 0080 00       		.byte	0
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 63


 1930 0081 02       		.uleb128 0x2
 1931 0082 18       		.uleb128 0x18
 1932 0083 9142     		.uleb128 0x2111
 1933 0085 18       		.uleb128 0x18
 1934 0086 00       		.byte	0
 1935 0087 00       		.byte	0
 1936 0088 0B       		.uleb128 0xb
 1937 0089 2E       		.uleb128 0x2e
 1938 008a 00       		.byte	0
 1939 008b 3F       		.uleb128 0x3f
 1940 008c 19       		.uleb128 0x19
 1941 008d 03       		.uleb128 0x3
 1942 008e 0E       		.uleb128 0xe
 1943 008f 3A       		.uleb128 0x3a
 1944 0090 0B       		.uleb128 0xb
 1945 0091 3B       		.uleb128 0x3b
 1946 0092 05       		.uleb128 0x5
 1947 0093 27       		.uleb128 0x27
 1948 0094 19       		.uleb128 0x19
 1949 0095 49       		.uleb128 0x49
 1950 0096 13       		.uleb128 0x13
 1951 0097 11       		.uleb128 0x11
 1952 0098 01       		.uleb128 0x1
 1953 0099 12       		.uleb128 0x12
 1954 009a 06       		.uleb128 0x6
 1955 009b 40       		.uleb128 0x40
 1956 009c 18       		.uleb128 0x18
 1957 009d 9742     		.uleb128 0x2117
 1958 009f 19       		.uleb128 0x19
 1959 00a0 00       		.byte	0
 1960 00a1 00       		.byte	0
 1961 00a2 0C       		.uleb128 0xc
 1962 00a3 2E       		.uleb128 0x2e
 1963 00a4 01       		.byte	0x1
 1964 00a5 3F       		.uleb128 0x3f
 1965 00a6 19       		.uleb128 0x19
 1966 00a7 03       		.uleb128 0x3
 1967 00a8 0E       		.uleb128 0xe
 1968 00a9 3A       		.uleb128 0x3a
 1969 00aa 0B       		.uleb128 0xb
 1970 00ab 3B       		.uleb128 0x3b
 1971 00ac 05       		.uleb128 0x5
 1972 00ad 27       		.uleb128 0x27
 1973 00ae 19       		.uleb128 0x19
 1974 00af 11       		.uleb128 0x11
 1975 00b0 01       		.uleb128 0x1
 1976 00b1 12       		.uleb128 0x12
 1977 00b2 06       		.uleb128 0x6
 1978 00b3 40       		.uleb128 0x40
 1979 00b4 18       		.uleb128 0x18
 1980 00b5 9742     		.uleb128 0x2117
 1981 00b7 19       		.uleb128 0x19
 1982 00b8 01       		.uleb128 0x1
 1983 00b9 13       		.uleb128 0x13
 1984 00ba 00       		.byte	0
 1985 00bb 00       		.byte	0
 1986 00bc 0D       		.uleb128 0xd
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 64


 1987 00bd 05       		.uleb128 0x5
 1988 00be 00       		.byte	0
 1989 00bf 03       		.uleb128 0x3
 1990 00c0 0E       		.uleb128 0xe
 1991 00c1 3A       		.uleb128 0x3a
 1992 00c2 0B       		.uleb128 0xb
 1993 00c3 3B       		.uleb128 0x3b
 1994 00c4 05       		.uleb128 0x5
 1995 00c5 49       		.uleb128 0x49
 1996 00c6 13       		.uleb128 0x13
 1997 00c7 02       		.uleb128 0x2
 1998 00c8 18       		.uleb128 0x18
 1999 00c9 00       		.byte	0
 2000 00ca 00       		.byte	0
 2001 00cb 0E       		.uleb128 0xe
 2002 00cc 2E       		.uleb128 0x2e
 2003 00cd 01       		.byte	0x1
 2004 00ce 3F       		.uleb128 0x3f
 2005 00cf 19       		.uleb128 0x19
 2006 00d0 03       		.uleb128 0x3
 2007 00d1 0E       		.uleb128 0xe
 2008 00d2 3A       		.uleb128 0x3a
 2009 00d3 0B       		.uleb128 0xb
 2010 00d4 3B       		.uleb128 0x3b
 2011 00d5 05       		.uleb128 0x5
 2012 00d6 27       		.uleb128 0x27
 2013 00d7 19       		.uleb128 0x19
 2014 00d8 49       		.uleb128 0x49
 2015 00d9 13       		.uleb128 0x13
 2016 00da 11       		.uleb128 0x11
 2017 00db 01       		.uleb128 0x1
 2018 00dc 12       		.uleb128 0x12
 2019 00dd 06       		.uleb128 0x6
 2020 00de 40       		.uleb128 0x40
 2021 00df 18       		.uleb128 0x18
 2022 00e0 9742     		.uleb128 0x2117
 2023 00e2 19       		.uleb128 0x19
 2024 00e3 01       		.uleb128 0x1
 2025 00e4 13       		.uleb128 0x13
 2026 00e5 00       		.byte	0
 2027 00e6 00       		.byte	0
 2028 00e7 0F       		.uleb128 0xf
 2029 00e8 34       		.uleb128 0x34
 2030 00e9 00       		.byte	0
 2031 00ea 03       		.uleb128 0x3
 2032 00eb 0E       		.uleb128 0xe
 2033 00ec 3A       		.uleb128 0x3a
 2034 00ed 0B       		.uleb128 0xb
 2035 00ee 3B       		.uleb128 0x3b
 2036 00ef 05       		.uleb128 0x5
 2037 00f0 49       		.uleb128 0x49
 2038 00f1 13       		.uleb128 0x13
 2039 00f2 02       		.uleb128 0x2
 2040 00f3 18       		.uleb128 0x18
 2041 00f4 00       		.byte	0
 2042 00f5 00       		.byte	0
 2043 00f6 10       		.uleb128 0x10
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 65


 2044 00f7 34       		.uleb128 0x34
 2045 00f8 00       		.byte	0
 2046 00f9 03       		.uleb128 0x3
 2047 00fa 0E       		.uleb128 0xe
 2048 00fb 3A       		.uleb128 0x3a
 2049 00fc 0B       		.uleb128 0xb
 2050 00fd 3B       		.uleb128 0x3b
 2051 00fe 05       		.uleb128 0x5
 2052 00ff 49       		.uleb128 0x49
 2053 0100 13       		.uleb128 0x13
 2054 0101 02       		.uleb128 0x2
 2055 0102 17       		.uleb128 0x17
 2056 0103 00       		.byte	0
 2057 0104 00       		.byte	0
 2058 0105 11       		.uleb128 0x11
 2059 0106 05       		.uleb128 0x5
 2060 0107 00       		.byte	0
 2061 0108 03       		.uleb128 0x3
 2062 0109 0E       		.uleb128 0xe
 2063 010a 3A       		.uleb128 0x3a
 2064 010b 0B       		.uleb128 0xb
 2065 010c 3B       		.uleb128 0x3b
 2066 010d 05       		.uleb128 0x5
 2067 010e 49       		.uleb128 0x49
 2068 010f 13       		.uleb128 0x13
 2069 0110 02       		.uleb128 0x2
 2070 0111 17       		.uleb128 0x17
 2071 0112 00       		.byte	0
 2072 0113 00       		.byte	0
 2073 0114 12       		.uleb128 0x12
 2074 0115 898201   		.uleb128 0x4109
 2075 0118 01       		.byte	0x1
 2076 0119 11       		.uleb128 0x11
 2077 011a 01       		.uleb128 0x1
 2078 011b 31       		.uleb128 0x31
 2079 011c 13       		.uleb128 0x13
 2080 011d 01       		.uleb128 0x1
 2081 011e 13       		.uleb128 0x13
 2082 011f 00       		.byte	0
 2083 0120 00       		.byte	0
 2084 0121 13       		.uleb128 0x13
 2085 0122 0F       		.uleb128 0xf
 2086 0123 00       		.byte	0
 2087 0124 0B       		.uleb128 0xb
 2088 0125 0B       		.uleb128 0xb
 2089 0126 49       		.uleb128 0x49
 2090 0127 13       		.uleb128 0x13
 2091 0128 00       		.byte	0
 2092 0129 00       		.byte	0
 2093 012a 14       		.uleb128 0x14
 2094 012b 26       		.uleb128 0x26
 2095 012c 00       		.byte	0
 2096 012d 49       		.uleb128 0x49
 2097 012e 13       		.uleb128 0x13
 2098 012f 00       		.byte	0
 2099 0130 00       		.byte	0
 2100 0131 15       		.uleb128 0x15
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 66


 2101 0132 0B       		.uleb128 0xb
 2102 0133 01       		.byte	0x1
 2103 0134 11       		.uleb128 0x11
 2104 0135 01       		.uleb128 0x1
 2105 0136 12       		.uleb128 0x12
 2106 0137 06       		.uleb128 0x6
 2107 0138 00       		.byte	0
 2108 0139 00       		.byte	0
 2109 013a 16       		.uleb128 0x16
 2110 013b 34       		.uleb128 0x34
 2111 013c 00       		.byte	0
 2112 013d 03       		.uleb128 0x3
 2113 013e 0E       		.uleb128 0xe
 2114 013f 3A       		.uleb128 0x3a
 2115 0140 0B       		.uleb128 0xb
 2116 0141 3B       		.uleb128 0x3b
 2117 0142 0B       		.uleb128 0xb
 2118 0143 49       		.uleb128 0x49
 2119 0144 13       		.uleb128 0x13
 2120 0145 3F       		.uleb128 0x3f
 2121 0146 19       		.uleb128 0x19
 2122 0147 02       		.uleb128 0x2
 2123 0148 18       		.uleb128 0x18
 2124 0149 00       		.byte	0
 2125 014a 00       		.byte	0
 2126 014b 17       		.uleb128 0x17
 2127 014c 2E       		.uleb128 0x2e
 2128 014d 00       		.byte	0
 2129 014e 3F       		.uleb128 0x3f
 2130 014f 19       		.uleb128 0x19
 2131 0150 03       		.uleb128 0x3
 2132 0151 0E       		.uleb128 0xe
 2133 0152 3A       		.uleb128 0x3a
 2134 0153 0B       		.uleb128 0xb
 2135 0154 3B       		.uleb128 0x3b
 2136 0155 0B       		.uleb128 0xb
 2137 0156 27       		.uleb128 0x27
 2138 0157 19       		.uleb128 0x19
 2139 0158 49       		.uleb128 0x49
 2140 0159 13       		.uleb128 0x13
 2141 015a 3C       		.uleb128 0x3c
 2142 015b 19       		.uleb128 0x19
 2143 015c 00       		.byte	0
 2144 015d 00       		.byte	0
 2145 015e 18       		.uleb128 0x18
 2146 015f 2E       		.uleb128 0x2e
 2147 0160 00       		.byte	0
 2148 0161 3F       		.uleb128 0x3f
 2149 0162 19       		.uleb128 0x19
 2150 0163 03       		.uleb128 0x3
 2151 0164 0E       		.uleb128 0xe
 2152 0165 3A       		.uleb128 0x3a
 2153 0166 0B       		.uleb128 0xb
 2154 0167 3B       		.uleb128 0x3b
 2155 0168 0B       		.uleb128 0xb
 2156 0169 27       		.uleb128 0x27
 2157 016a 19       		.uleb128 0x19
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 67


 2158 016b 3C       		.uleb128 0x3c
 2159 016c 19       		.uleb128 0x19
 2160 016d 00       		.byte	0
 2161 016e 00       		.byte	0
 2162 016f 19       		.uleb128 0x19
 2163 0170 2E       		.uleb128 0x2e
 2164 0171 01       		.byte	0x1
 2165 0172 3F       		.uleb128 0x3f
 2166 0173 19       		.uleb128 0x19
 2167 0174 03       		.uleb128 0x3
 2168 0175 0E       		.uleb128 0xe
 2169 0176 3A       		.uleb128 0x3a
 2170 0177 0B       		.uleb128 0xb
 2171 0178 3B       		.uleb128 0x3b
 2172 0179 0B       		.uleb128 0xb
 2173 017a 27       		.uleb128 0x27
 2174 017b 19       		.uleb128 0x19
 2175 017c 3C       		.uleb128 0x3c
 2176 017d 19       		.uleb128 0x19
 2177 017e 01       		.uleb128 0x1
 2178 017f 13       		.uleb128 0x13
 2179 0180 00       		.byte	0
 2180 0181 00       		.byte	0
 2181 0182 1A       		.uleb128 0x1a
 2182 0183 05       		.uleb128 0x5
 2183 0184 00       		.byte	0
 2184 0185 49       		.uleb128 0x49
 2185 0186 13       		.uleb128 0x13
 2186 0187 00       		.byte	0
 2187 0188 00       		.byte	0
 2188 0189 00       		.byte	0
 2189              		.section	.debug_loc,"",%progbits
 2190              	.Ldebug_loc0:
 2191              	.LLST0:
 2192 0000 08000000 		.4byte	.LVL1
 2193 0004 36000000 		.4byte	.LVL4
 2194 0008 0100     		.2byte	0x1
 2195 000a 54       		.byte	0x54
 2196 000b 00000000 		.4byte	0
 2197 000f 00000000 		.4byte	0
 2198              	.LLST1:
 2199 0013 08000000 		.4byte	.LVL6
 2200 0017 34000000 		.4byte	.LVL9
 2201 001b 0100     		.2byte	0x1
 2202 001d 54       		.byte	0x54
 2203 001e 00000000 		.4byte	0
 2204 0022 00000000 		.4byte	0
 2205              	.LLST2:
 2206 0026 04000000 		.4byte	.LVL13
 2207 002a 08000000 		.4byte	.LVL14
 2208 002e 0600     		.2byte	0x6
 2209 0030 70       		.byte	0x70
 2210 0031 00       		.sleb128 0
 2211 0032 08       		.byte	0x8
 2212 0033 7F       		.byte	0x7f
 2213 0034 1A       		.byte	0x1a
 2214 0035 9F       		.byte	0x9f
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 68


 2215 0036 00000000 		.4byte	0
 2216 003a 00000000 		.4byte	0
 2217              	.LLST3:
 2218 003e 00000000 		.4byte	.LVL15
 2219 0042 12000000 		.4byte	.LVL17
 2220 0046 0200     		.2byte	0x2
 2221 0048 30       		.byte	0x30
 2222 0049 9F       		.byte	0x9f
 2223 004a 12000000 		.4byte	.LVL17
 2224 004e 1A000000 		.4byte	.LVL18
 2225 0052 0100     		.2byte	0x1
 2226 0054 50       		.byte	0x50
 2227 0055 1A000000 		.4byte	.LVL18
 2228 0059 1E000000 		.4byte	.LVL19
 2229 005d 0200     		.2byte	0x2
 2230 005f 30       		.byte	0x30
 2231 0060 9F       		.byte	0x9f
 2232 0061 1E000000 		.4byte	.LVL19
 2233 0065 2C000000 		.4byte	.LFE9
 2234 0069 0100     		.2byte	0x1
 2235 006b 50       		.byte	0x50
 2236 006c 00000000 		.4byte	0
 2237 0070 00000000 		.4byte	0
 2238              	.LLST4:
 2239 0074 06000000 		.4byte	.LVL24
 2240 0078 1B000000 		.4byte	.LVL25-1
 2241 007c 0100     		.2byte	0x1
 2242 007e 50       		.byte	0x50
 2243 007f 00000000 		.4byte	0
 2244 0083 00000000 		.4byte	0
 2245              	.LLST5:
 2246 0087 00000000 		.4byte	.LVL26
 2247 008b 0A000000 		.4byte	.LVL28
 2248 008f 0100     		.2byte	0x1
 2249 0091 50       		.byte	0x50
 2250 0092 0A000000 		.4byte	.LVL28
 2251 0096 18000000 		.4byte	.LFE13
 2252 009a 0400     		.2byte	0x4
 2253 009c F3       		.byte	0xf3
 2254 009d 01       		.uleb128 0x1
 2255 009e 50       		.byte	0x50
 2256 009f 9F       		.byte	0x9f
 2257 00a0 00000000 		.4byte	0
 2258 00a4 00000000 		.4byte	0
 2259              	.LLST6:
 2260 00a8 00000000 		.4byte	.LVL40
 2261 00ac 0A000000 		.4byte	.LVL42
 2262 00b0 0100     		.2byte	0x1
 2263 00b2 50       		.byte	0x50
 2264 00b3 0A000000 		.4byte	.LVL42
 2265 00b7 14000000 		.4byte	.LVL46
 2266 00bb 0100     		.2byte	0x1
 2267 00bd 55       		.byte	0x55
 2268 00be 14000000 		.4byte	.LVL46
 2269 00c2 18000000 		.4byte	.LVL47
 2270 00c6 0100     		.2byte	0x1
 2271 00c8 50       		.byte	0x50
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 69


 2272 00c9 18000000 		.4byte	.LVL47
 2273 00cd 20000000 		.4byte	.LVL48
 2274 00d1 0100     		.2byte	0x1
 2275 00d3 55       		.byte	0x55
 2276 00d4 20000000 		.4byte	.LVL48
 2277 00d8 24000000 		.4byte	.LFE20
 2278 00dc 0400     		.2byte	0x4
 2279 00de F3       		.byte	0xf3
 2280 00df 01       		.uleb128 0x1
 2281 00e0 50       		.byte	0x50
 2282 00e1 9F       		.byte	0x9f
 2283 00e2 00000000 		.4byte	0
 2284 00e6 00000000 		.4byte	0
 2285              	.LLST7:
 2286 00ea 02000000 		.4byte	.LVL41
 2287 00ee 0A000000 		.4byte	.LVL42
 2288 00f2 0200     		.2byte	0x2
 2289 00f4 30       		.byte	0x30
 2290 00f5 9F       		.byte	0x9f
 2291 00f6 0A000000 		.4byte	.LVL42
 2292 00fa 10000000 		.4byte	.LVL44
 2293 00fe 0100     		.2byte	0x1
 2294 0100 54       		.byte	0x54
 2295 0101 12000000 		.4byte	.LVL45
 2296 0105 14000000 		.4byte	.LVL46
 2297 0109 0100     		.2byte	0x1
 2298 010b 54       		.byte	0x54
 2299 010c 14000000 		.4byte	.LVL46
 2300 0110 18000000 		.4byte	.LVL47
 2301 0114 0200     		.2byte	0x2
 2302 0116 30       		.byte	0x30
 2303 0117 9F       		.byte	0x9f
 2304 0118 18000000 		.4byte	.LVL47
 2305 011c 20000000 		.4byte	.LVL48
 2306 0120 0100     		.2byte	0x1
 2307 0122 54       		.byte	0x54
 2308 0123 00000000 		.4byte	0
 2309 0127 00000000 		.4byte	0
 2310              	.LLST8:
 2311 012b 00000000 		.4byte	.LVL49
 2312 012f 08000000 		.4byte	.LVL50
 2313 0133 0100     		.2byte	0x1
 2314 0135 50       		.byte	0x50
 2315 0136 08000000 		.4byte	.LVL50
 2316 013a 14000000 		.4byte	.LVL54
 2317 013e 0100     		.2byte	0x1
 2318 0140 56       		.byte	0x56
 2319 0141 14000000 		.4byte	.LVL54
 2320 0145 1C000000 		.4byte	.LVL55
 2321 0149 0100     		.2byte	0x1
 2322 014b 50       		.byte	0x50
 2323 014c 1C000000 		.4byte	.LVL55
 2324 0150 22000000 		.4byte	.LVL56
 2325 0154 0100     		.2byte	0x1
 2326 0156 56       		.byte	0x56
 2327 0157 22000000 		.4byte	.LVL56
 2328 015b 28000000 		.4byte	.LFE21
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 70


 2329 015f 0400     		.2byte	0x4
 2330 0161 F3       		.byte	0xf3
 2331 0162 01       		.uleb128 0x1
 2332 0163 50       		.byte	0x50
 2333 0164 9F       		.byte	0x9f
 2334 0165 00000000 		.4byte	0
 2335 0169 00000000 		.4byte	0
 2336              	.LLST9:
 2337 016d 00000000 		.4byte	.LVL49
 2338 0171 08000000 		.4byte	.LVL50
 2339 0175 0100     		.2byte	0x1
 2340 0177 51       		.byte	0x51
 2341 0178 08000000 		.4byte	.LVL50
 2342 017c 14000000 		.4byte	.LVL54
 2343 0180 0400     		.2byte	0x4
 2344 0182 F3       		.byte	0xf3
 2345 0183 01       		.uleb128 0x1
 2346 0184 51       		.byte	0x51
 2347 0185 9F       		.byte	0x9f
 2348 0186 14000000 		.4byte	.LVL54
 2349 018a 1C000000 		.4byte	.LVL55
 2350 018e 0100     		.2byte	0x1
 2351 0190 51       		.byte	0x51
 2352 0191 1C000000 		.4byte	.LVL55
 2353 0195 28000000 		.4byte	.LFE21
 2354 0199 0400     		.2byte	0x4
 2355 019b F3       		.byte	0xf3
 2356 019c 01       		.uleb128 0x1
 2357 019d 51       		.byte	0x51
 2358 019e 9F       		.byte	0x9f
 2359 019f 00000000 		.4byte	0
 2360 01a3 00000000 		.4byte	0
 2361              	.LLST10:
 2362 01a7 00000000 		.4byte	.LVL49
 2363 01ab 08000000 		.4byte	.LVL50
 2364 01af 0200     		.2byte	0x2
 2365 01b1 30       		.byte	0x30
 2366 01b2 9F       		.byte	0x9f
 2367 01b3 08000000 		.4byte	.LVL50
 2368 01b7 10000000 		.4byte	.LVL52
 2369 01bb 0100     		.2byte	0x1
 2370 01bd 54       		.byte	0x54
 2371 01be 12000000 		.4byte	.LVL53
 2372 01c2 14000000 		.4byte	.LVL54
 2373 01c6 0100     		.2byte	0x1
 2374 01c8 54       		.byte	0x54
 2375 01c9 14000000 		.4byte	.LVL54
 2376 01cd 1C000000 		.4byte	.LVL55
 2377 01d1 0200     		.2byte	0x2
 2378 01d3 30       		.byte	0x30
 2379 01d4 9F       		.byte	0x9f
 2380 01d5 1C000000 		.4byte	.LVL55
 2381 01d9 22000000 		.4byte	.LVL56
 2382 01dd 0100     		.2byte	0x1
 2383 01df 54       		.byte	0x54
 2384 01e0 00000000 		.4byte	0
 2385 01e4 00000000 		.4byte	0
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 71


 2386              	.LLST11:
 2387 01e8 00000000 		.4byte	.LVL57
 2388 01ec 0B000000 		.4byte	.LVL58-1
 2389 01f0 0100     		.2byte	0x1
 2390 01f2 50       		.byte	0x50
 2391 01f3 0B000000 		.4byte	.LVL58-1
 2392 01f7 20000000 		.4byte	.LFE22
 2393 01fb 0400     		.2byte	0x4
 2394 01fd F3       		.byte	0xf3
 2395 01fe 01       		.uleb128 0x1
 2396 01ff 50       		.byte	0x50
 2397 0200 9F       		.byte	0x9f
 2398 0201 00000000 		.4byte	0
 2399 0205 00000000 		.4byte	0
 2400              	.LLST12:
 2401 0209 06000000 		.4byte	.LVL61
 2402 020d 1C000000 		.4byte	.LVL62
 2403 0211 0100     		.2byte	0x1
 2404 0213 53       		.byte	0x53
 2405 0214 1C000000 		.4byte	.LVL62
 2406 0218 24000000 		.4byte	.LFE23
 2407 021c 0100     		.2byte	0x1
 2408 021e 50       		.byte	0x50
 2409 021f 00000000 		.4byte	0
 2410 0223 00000000 		.4byte	0
 2411              	.LLST13:
 2412 0227 06000000 		.4byte	.LVL63
 2413 022b 1B000000 		.4byte	.LVL64-1
 2414 022f 0100     		.2byte	0x1
 2415 0231 50       		.byte	0x50
 2416 0232 00000000 		.4byte	0
 2417 0236 00000000 		.4byte	0
 2418              	.LLST14:
 2419 023a 00000000 		.4byte	.LVL65
 2420 023e 3E000000 		.4byte	.LVL70
 2421 0242 0100     		.2byte	0x1
 2422 0244 50       		.byte	0x50
 2423 0245 3E000000 		.4byte	.LVL70
 2424 0249 5C000000 		.4byte	.LFE25
 2425 024d 0400     		.2byte	0x4
 2426 024f F3       		.byte	0xf3
 2427 0250 01       		.uleb128 0x1
 2428 0251 50       		.byte	0x50
 2429 0252 9F       		.byte	0x9f
 2430 0253 00000000 		.4byte	0
 2431 0257 00000000 		.4byte	0
 2432              	.LLST15:
 2433 025b 24000000 		.4byte	.LVL66
 2434 025f 2A000000 		.4byte	.LVL67
 2435 0263 0100     		.2byte	0x1
 2436 0265 53       		.byte	0x53
 2437 0266 36000000 		.4byte	.LVL68
 2438 026a 3C000000 		.4byte	.LVL69
 2439 026e 0100     		.2byte	0x1
 2440 0270 53       		.byte	0x53
 2441 0271 00000000 		.4byte	0
 2442 0275 00000000 		.4byte	0
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 72


 2443              	.LLST16:
 2444 0279 00000000 		.4byte	.LVL71
 2445 027d 07000000 		.4byte	.LVL72-1
 2446 0281 0100     		.2byte	0x1
 2447 0283 50       		.byte	0x50
 2448 0284 07000000 		.4byte	.LVL72-1
 2449 0288 14000000 		.4byte	.LVL74
 2450 028c 0400     		.2byte	0x4
 2451 028e F3       		.byte	0xf3
 2452 028f 01       		.uleb128 0x1
 2453 0290 50       		.byte	0x50
 2454 0291 9F       		.byte	0x9f
 2455 0292 14000000 		.4byte	.LVL74
 2456 0296 17000000 		.4byte	.LVL75-1
 2457 029a 0100     		.2byte	0x1
 2458 029c 50       		.byte	0x50
 2459 029d 17000000 		.4byte	.LVL75-1
 2460 02a1 22000000 		.4byte	.LFE26
 2461 02a5 0400     		.2byte	0x4
 2462 02a7 F3       		.byte	0xf3
 2463 02a8 01       		.uleb128 0x1
 2464 02a9 50       		.byte	0x50
 2465 02aa 9F       		.byte	0x9f
 2466 02ab 00000000 		.4byte	0
 2467 02af 00000000 		.4byte	0
 2468              		.section	.debug_aranges,"",%progbits
 2469 0000 EC000000 		.4byte	0xec
 2470 0004 0200     		.2byte	0x2
 2471 0006 00000000 		.4byte	.Ldebug_info0
 2472 000a 04       		.byte	0x4
 2473 000b 00       		.byte	0
 2474 000c 0000     		.2byte	0
 2475 000e 0000     		.2byte	0
 2476 0010 00000000 		.4byte	.LFB2
 2477 0014 3C000000 		.4byte	.LFE2-.LFB2
 2478 0018 00000000 		.4byte	.LFB3
 2479 001c 3C000000 		.4byte	.LFE3-.LFB3
 2480 0020 00000000 		.4byte	.LFB4
 2481 0024 0C000000 		.4byte	.LFE4-.LFB4
 2482 0028 00000000 		.4byte	.LFB5
 2483 002c 0C000000 		.4byte	.LFE5-.LFB5
 2484 0030 00000000 		.4byte	.LFB6
 2485 0034 0C000000 		.4byte	.LFE6-.LFB6
 2486 0038 00000000 		.4byte	.LFB7
 2487 003c 0C000000 		.4byte	.LFE7-.LFB7
 2488 0040 00000000 		.4byte	.LFB8
 2489 0044 10000000 		.4byte	.LFE8-.LFB8
 2490 0048 00000000 		.4byte	.LFB9
 2491 004c 2C000000 		.4byte	.LFE9-.LFB9
 2492 0050 00000000 		.4byte	.LFB10
 2493 0054 12000000 		.4byte	.LFE10-.LFB10
 2494 0058 00000000 		.4byte	.LFB11
 2495 005c 18000000 		.4byte	.LFE11-.LFB11
 2496 0060 00000000 		.4byte	.LFB12
 2497 0064 24000000 		.4byte	.LFE12-.LFB12
 2498 0068 00000000 		.4byte	.LFB13
 2499 006c 18000000 		.4byte	.LFE13-.LFB13
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 73


 2500 0070 00000000 		.4byte	.LFB14
 2501 0074 0C000000 		.4byte	.LFE14-.LFB14
 2502 0078 00000000 		.4byte	.LFB15
 2503 007c 0C000000 		.4byte	.LFE15-.LFB15
 2504 0080 00000000 		.4byte	.LFB1
 2505 0084 3C000000 		.4byte	.LFE1-.LFB1
 2506 0088 00000000 		.4byte	.LFB0
 2507 008c 1C000000 		.4byte	.LFE0-.LFB0
 2508 0090 00000000 		.4byte	.LFB16
 2509 0094 0C000000 		.4byte	.LFE16-.LFB16
 2510 0098 00000000 		.4byte	.LFB17
 2511 009c 14000000 		.4byte	.LFE17-.LFB17
 2512 00a0 00000000 		.4byte	.LFB18
 2513 00a4 0C000000 		.4byte	.LFE18-.LFB18
 2514 00a8 00000000 		.4byte	.LFB19
 2515 00ac 18000000 		.4byte	.LFE19-.LFB19
 2516 00b0 00000000 		.4byte	.LFB20
 2517 00b4 24000000 		.4byte	.LFE20-.LFB20
 2518 00b8 00000000 		.4byte	.LFB21
 2519 00bc 28000000 		.4byte	.LFE21-.LFB21
 2520 00c0 00000000 		.4byte	.LFB22
 2521 00c4 20000000 		.4byte	.LFE22-.LFB22
 2522 00c8 00000000 		.4byte	.LFB23
 2523 00cc 24000000 		.4byte	.LFE23-.LFB23
 2524 00d0 00000000 		.4byte	.LFB24
 2525 00d4 24000000 		.4byte	.LFE24-.LFB24
 2526 00d8 00000000 		.4byte	.LFB25
 2527 00dc 5C000000 		.4byte	.LFE25-.LFB25
 2528 00e0 00000000 		.4byte	.LFB26
 2529 00e4 22000000 		.4byte	.LFE26-.LFB26
 2530 00e8 00000000 		.4byte	0
 2531 00ec 00000000 		.4byte	0
 2532              		.section	.debug_ranges,"",%progbits
 2533              	.Ldebug_ranges0:
 2534 0000 00000000 		.4byte	.LFB2
 2535 0004 3C000000 		.4byte	.LFE2
 2536 0008 00000000 		.4byte	.LFB3
 2537 000c 3C000000 		.4byte	.LFE3
 2538 0010 00000000 		.4byte	.LFB4
 2539 0014 0C000000 		.4byte	.LFE4
 2540 0018 00000000 		.4byte	.LFB5
 2541 001c 0C000000 		.4byte	.LFE5
 2542 0020 00000000 		.4byte	.LFB6
 2543 0024 0C000000 		.4byte	.LFE6
 2544 0028 00000000 		.4byte	.LFB7
 2545 002c 0C000000 		.4byte	.LFE7
 2546 0030 00000000 		.4byte	.LFB8
 2547 0034 10000000 		.4byte	.LFE8
 2548 0038 00000000 		.4byte	.LFB9
 2549 003c 2C000000 		.4byte	.LFE9
 2550 0040 00000000 		.4byte	.LFB10
 2551 0044 12000000 		.4byte	.LFE10
 2552 0048 00000000 		.4byte	.LFB11
 2553 004c 18000000 		.4byte	.LFE11
 2554 0050 00000000 		.4byte	.LFB12
 2555 0054 24000000 		.4byte	.LFE12
 2556 0058 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 74


 2557 005c 18000000 		.4byte	.LFE13
 2558 0060 00000000 		.4byte	.LFB14
 2559 0064 0C000000 		.4byte	.LFE14
 2560 0068 00000000 		.4byte	.LFB15
 2561 006c 0C000000 		.4byte	.LFE15
 2562 0070 00000000 		.4byte	.LFB1
 2563 0074 3C000000 		.4byte	.LFE1
 2564 0078 00000000 		.4byte	.LFB0
 2565 007c 1C000000 		.4byte	.LFE0
 2566 0080 00000000 		.4byte	.LFB16
 2567 0084 0C000000 		.4byte	.LFE16
 2568 0088 00000000 		.4byte	.LFB17
 2569 008c 14000000 		.4byte	.LFE17
 2570 0090 00000000 		.4byte	.LFB18
 2571 0094 0C000000 		.4byte	.LFE18
 2572 0098 00000000 		.4byte	.LFB19
 2573 009c 18000000 		.4byte	.LFE19
 2574 00a0 00000000 		.4byte	.LFB20
 2575 00a4 24000000 		.4byte	.LFE20
 2576 00a8 00000000 		.4byte	.LFB21
 2577 00ac 28000000 		.4byte	.LFE21
 2578 00b0 00000000 		.4byte	.LFB22
 2579 00b4 20000000 		.4byte	.LFE22
 2580 00b8 00000000 		.4byte	.LFB23
 2581 00bc 24000000 		.4byte	.LFE23
 2582 00c0 00000000 		.4byte	.LFB24
 2583 00c4 24000000 		.4byte	.LFE24
 2584 00c8 00000000 		.4byte	.LFB25
 2585 00cc 5C000000 		.4byte	.LFE25
 2586 00d0 00000000 		.4byte	.LFB26
 2587 00d4 22000000 		.4byte	.LFE26
 2588 00d8 00000000 		.4byte	0
 2589 00dc 00000000 		.4byte	0
 2590              		.section	.debug_line,"",%progbits
 2591              	.Ldebug_line0:
 2592 0000 C5020000 		.section	.debug_str,"MS",%progbits,1
 2592      02005F00 
 2592      00000201 
 2592      FB0E0D00 
 2592      01010101 
 2593              	.LASF10:
 2594 0000 75696E74 		.ascii	"uint16\000"
 2594      313600
 2595              	.LASF68:
 2596 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 2596      69744372 
 2596      69746963 
 2596      616C5365 
 2596      6374696F 
 2597              	.LASF44:
 2598 001d 74784461 		.ascii	"txDataByte\000"
 2598      74614279 
 2598      746500
 2599              	.LASF49:
 2600 0028 73747269 		.ascii	"string\000"
 2600      6E6700
 2601              	.LASF7:
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 75


 2602 002f 6C6F6E67 		.ascii	"long long unsigned int\000"
 2602      206C6F6E 
 2602      6720756E 
 2602      7369676E 
 2602      65642069 
 2603              	.LASF41:
 2604 0046 55415254 		.ascii	"UART_Start\000"
 2604      5F537461 
 2604      727400
 2605              	.LASF42:
 2606 0051 55415254 		.ascii	"UART_SetTxInterruptMode\000"
 2606      5F536574 
 2606      5478496E 
 2606      74657272 
 2606      7570744D 
 2607              	.LASF6:
 2608 0069 6C6F6E67 		.ascii	"long long int\000"
 2608      206C6F6E 
 2608      6720696E 
 2608      7400
 2609              	.LASF0:
 2610 0077 7369676E 		.ascii	"signed char\000"
 2610      65642063 
 2610      68617200 
 2611              	.LASF59:
 2612 0083 74785065 		.ascii	"txPeriod\000"
 2612      72696F64 
 2612      00
 2613              	.LASF4:
 2614 008c 6C6F6E67 		.ascii	"long int\000"
 2614      20696E74 
 2614      00
 2615              	.LASF47:
 2616 0095 55415254 		.ascii	"UART_PutChar\000"
 2616      5F507574 
 2616      43686172 
 2616      00
 2617              	.LASF25:
 2618 00a2 55415254 		.ascii	"UART_ReadRxData\000"
 2618      5F526561 
 2618      64527844 
 2618      61746100 
 2619              	.LASF9:
 2620 00b2 75696E74 		.ascii	"uint8\000"
 2620      3800
 2621              	.LASF45:
 2622 00b8 55415254 		.ascii	"UART_ReadControlRegister\000"
 2622      5F526561 
 2622      64436F6E 
 2622      74726F6C 
 2622      52656769 
 2623              	.LASF12:
 2624 00d1 646F7562 		.ascii	"double\000"
 2624      6C6500
 2625              	.LASF35:
 2626 00d8 61646472 		.ascii	"addressMode\000"
 2626      6573734D 
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 76


 2626      6F646500 
 2627              	.LASF22:
 2628 00e4 636F6E74 		.ascii	"control\000"
 2628      726F6C00 
 2629              	.LASF40:
 2630 00ec 55415254 		.ascii	"UART_Init\000"
 2630      5F496E69 
 2630      7400
 2631              	.LASF57:
 2632 00f6 7265744D 		.ascii	"retMode\000"
 2632      6F646500 
 2633              	.LASF30:
 2634 00fe 55415254 		.ascii	"UART_GetByte\000"
 2634      5F476574 
 2634      42797465 
 2634      00
 2635              	.LASF8:
 2636 010b 756E7369 		.ascii	"unsigned int\000"
 2636      676E6564 
 2636      20696E74 
 2636      00
 2637              	.LASF55:
 2638 0118 55415254 		.ascii	"UART_ClearTxBuffer\000"
 2638      5F436C65 
 2638      61725478 
 2638      42756666 
 2638      657200
 2639              	.LASF53:
 2640 012b 55415254 		.ascii	"UART_PutCRLF\000"
 2640      5F507574 
 2640      43524C46 
 2640      00
 2641              	.LASF5:
 2642 0138 6C6F6E67 		.ascii	"long unsigned int\000"
 2642      20756E73 
 2642      69676E65 
 2642      6420696E 
 2642      7400
 2643              	.LASF51:
 2644 014a 55415254 		.ascii	"UART_PutArray\000"
 2644      5F507574 
 2644      41727261 
 2644      7900
 2645              	.LASF67:
 2646 0158 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2646      74657243 
 2646      72697469 
 2646      63616C53 
 2646      65637469 
 2647              	.LASF32:
 2648 016f 73697A65 		.ascii	"size\000"
 2648      00
 2649              	.LASF3:
 2650 0174 73686F72 		.ascii	"short unsigned int\000"
 2650      7420756E 
 2650      7369676E 
 2650      65642069 
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 77


 2650      6E7400
 2651              	.LASF50:
 2652 0187 62756649 		.ascii	"bufIndex\000"
 2652      6E646578 
 2652      00
 2653              	.LASF23:
 2654 0190 696E7453 		.ascii	"intSrc\000"
 2654      726300
 2655              	.LASF60:
 2656 0197 55415254 		.ascii	"UART_SetTxAddressMode\000"
 2656      5F536574 
 2656      54784164 
 2656      64726573 
 2656      734D6F64 
 2657              	.LASF46:
 2658 01ad 55415254 		.ascii	"UART_ReadTxStatus\000"
 2658      5F526561 
 2658      64547853 
 2658      74617475 
 2658      7300
 2659              	.LASF61:
 2660 01bf 55415254 		.ascii	"UART_IntClock_Start\000"
 2660      5F496E74 
 2660      436C6F63 
 2660      6B5F5374 
 2660      61727400 
 2661              	.LASF36:
 2662 01d3 746D7043 		.ascii	"tmpCtrl\000"
 2662      74726C00 
 2663              	.LASF58:
 2664 01db 746D7053 		.ascii	"tmpStat\000"
 2664      74617400 
 2665              	.LASF16:
 2666 01e3 73697A65 		.ascii	"sizetype\000"
 2666      74797065 
 2666      00
 2667              	.LASF38:
 2668 01ec 61646472 		.ascii	"address\000"
 2668      65737300 
 2669              	.LASF37:
 2670 01f4 55415254 		.ascii	"UART_SetRxAddress1\000"
 2670      5F536574 
 2670      52784164 
 2670      64726573 
 2670      733100
 2671              	.LASF39:
 2672 0207 55415254 		.ascii	"UART_SetRxAddress2\000"
 2672      5F536574 
 2672      52784164 
 2672      64726573 
 2672      733200
 2673              	.LASF29:
 2674 021a 72785374 		.ascii	"rxStatus\000"
 2674      61747573 
 2674      00
 2675              	.LASF62:
 2676 0223 55415254 		.ascii	"UART_IntClock_Stop\000"
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 78


 2676      5F496E74 
 2676      436C6F63 
 2676      6B5F5374 
 2676      6F7000
 2677              	.LASF65:
 2678 0236 433A5C55 		.ascii	"C:\\Users\\Hesham\\Documents\\PSoC Creator\\PrISM_L"
 2678      73657273 
 2678      5C486573 
 2678      68616D5C 
 2678      446F6375 
 2679 0264 65643031 		.ascii	"ed01\\UART\\Lab_1_PreCourses\\Design01.cydsn\000"
 2679      5C554152 
 2679      545C4C61 
 2679      625F315F 
 2679      50726543 
 2680              	.LASF64:
 2681 028e 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART.c\000"
 2681      72617465 
 2681      645F536F 
 2681      75726365 
 2681      5C50536F 
 2682              	.LASF54:
 2683 02ac 55415254 		.ascii	"UART_GetTxBufferSize\000"
 2683      5F476574 
 2683      54784275 
 2683      66666572 
 2683      53697A65 
 2684              	.LASF15:
 2685 02c1 72656738 		.ascii	"reg8\000"
 2685      00
 2686              	.LASF34:
 2687 02c6 55415254 		.ascii	"UART_SetRxAddressMode\000"
 2687      5F536574 
 2687      52784164 
 2687      64726573 
 2687      734D6F64 
 2688              	.LASF1:
 2689 02dc 756E7369 		.ascii	"unsigned char\000"
 2689      676E6564 
 2689      20636861 
 2689      7200
 2690              	.LASF43:
 2691 02ea 55415254 		.ascii	"UART_WriteTxData\000"
 2691      5F577269 
 2691      74655478 
 2691      44617461 
 2691      00
 2692              	.LASF2:
 2693 02fb 73686F72 		.ascii	"short int\000"
 2693      7420696E 
 2693      7400
 2694              	.LASF56:
 2695 0305 55415254 		.ascii	"UART_SendBreak\000"
 2695      5F53656E 
 2695      64427265 
 2695      616B00
 2696              	.LASF52:
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 79


 2697 0314 62797465 		.ascii	"byteCount\000"
 2697      436F756E 
 2697      7400
 2698              	.LASF24:
 2699 031e 72784461 		.ascii	"rxData\000"
 2699      746100
 2700              	.LASF17:
 2701 0325 55415254 		.ascii	"UART_Enable\000"
 2701      5F456E61 
 2701      626C6500 
 2702              	.LASF26:
 2703 0331 55415254 		.ascii	"UART_ReadRxStatus\000"
 2703      5F526561 
 2703      64527853 
 2703      74617475 
 2703      7300
 2704              	.LASF14:
 2705 0343 63686172 		.ascii	"char\000"
 2705      00
 2706              	.LASF13:
 2707 0348 63686172 		.ascii	"char8\000"
 2707      3800
 2708              	.LASF21:
 2709 034e 55415254 		.ascii	"UART_SetRxInterruptMode\000"
 2709      5F536574 
 2709      5278496E 
 2709      74657272 
 2709      7570744D 
 2710              	.LASF28:
 2711 0366 55415254 		.ascii	"UART_GetChar\000"
 2711      5F476574 
 2711      43686172 
 2711      00
 2712              	.LASF19:
 2713 0373 656E6162 		.ascii	"enableInterrupts\000"
 2713      6C65496E 
 2713      74657272 
 2713      75707473 
 2713      00
 2714              	.LASF66:
 2715 0384 55415254 		.ascii	"UART_initVar\000"
 2715      5F696E69 
 2715      74566172 
 2715      00
 2716              	.LASF31:
 2717 0391 55415254 		.ascii	"UART_GetRxBufferSize\000"
 2717      5F476574 
 2717      52784275 
 2717      66666572 
 2717      53697A65 
 2718              	.LASF27:
 2719 03a6 73746174 		.ascii	"status\000"
 2719      757300
 2720              	.LASF63:
 2721 03ad 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2721      4320342E 
 2721      392E3320 
ARM GAS  C:\Users\Hesham\AppData\Local\Temp\cc1wSMNs.s 			page 80


 2721      32303135 
 2721      30333033 
 2722 03e0 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2722      20726576 
 2722      6973696F 
 2722      6E203232 
 2722      31323230 
 2723 0413 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2723      66756E63 
 2723      74696F6E 
 2723      2D736563 
 2723      74696F6E 
 2724              	.LASF18:
 2725 043b 55415254 		.ascii	"UART_Stop\000"
 2725      5F53746F 
 2725      7000
 2726              	.LASF11:
 2727 0445 666C6F61 		.ascii	"float\000"
 2727      7400
 2728              	.LASF48:
 2729 044b 55415254 		.ascii	"UART_PutString\000"
 2729      5F507574 
 2729      53747269 
 2729      6E6700
 2730              	.LASF20:
 2731 045a 55415254 		.ascii	"UART_WriteControlRegister\000"
 2731      5F577269 
 2731      7465436F 
 2731      6E74726F 
 2731      6C526567 
 2732              	.LASF33:
 2733 0474 55415254 		.ascii	"UART_ClearRxBuffer\000"
 2733      5F436C65 
 2733      61725278 
 2733      42756666 
 2733      657200
 2734              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
